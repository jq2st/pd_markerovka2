{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/checkimg-page/checkimg-page.component.ts","./src/app/checkimg-page/checkimg-page.component.html","./src/app/checkimg-page/checkimg-result/checkimg-result.component.ts","./src/app/checkimg-page/checkimg-result/checkimg-result.component.html","./src/app/history-page/history-page.component.html","./src/app/history-page/history-page.component.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/main-page/main-page.component.html","./src/app/main-page/main-page.component.ts","./src/app/meth-five-page/meth-five-page.component.html","./src/app/meth-five-page/meth-five-page.component.ts","./src/app/meth-five-page/meth-five-step1/meth-five-step1.component.ts","./src/app/meth-five-page/meth-five-step1/meth-five-step1.component.html","./src/app/meth-five-page/meth-five-step2/meth-five-step2.component.ts","./src/app/meth-five-page/meth-five-step2/meth-five-step2.component.html","./src/app/meth-five-page/meth-five-step3/meth-five-step3.component.ts","./src/app/meth-five-page/meth-five-step3/meth-five-step3.component.html","./src/app/meth-four-page/meth-four-page.component.html","./src/app/meth-four-page/meth-four-page.component.ts","./src/app/meth-four-page/meth-four-step1/meth-four-step1.component.ts","./src/app/meth-four-page/meth-four-step1/meth-four-step1.component.html","./src/app/meth-four-page/meth-four-step2/meth-four-step2.component.ts","./src/app/meth-four-page/meth-four-step2/meth-four-step2.component.html","./src/app/meth-four-page/meth-four-step3/meth-four-step3.component.ts","./src/app/meth-four-page/meth-four-step3/meth-four-step3.component.html","./src/app/meth-one-page/meth-one-page.component.html","./src/app/meth-one-page/meth-one-page.component.ts","./src/app/meth-one-page/meth-one-step1/meth-one-step1.component.ts","./src/app/meth-one-page/meth-one-step1/meth-one-step1.component.html","./src/app/meth-one-page/meth-one-step2/meth-one-step2.component.ts","./src/app/meth-one-page/meth-one-step2/meth-one-step2.component.html","./src/app/meth-one-page/meth-one-step3/meth-one-step3.component.ts","./src/app/meth-one-page/meth-one-step3/meth-one-step3.component.html","./src/app/meth-three-page/meth-three-page.component.html","./src/app/meth-three-page/meth-three-page.component.ts","./src/app/meth-three-page/meth-three-step1/meth-three-step1.component.ts","./src/app/meth-three-page/meth-three-step1/meth-three-step1.component.html","./src/app/meth-three-page/meth-three-step2/meth-three-step2.component.ts","./src/app/meth-three-page/meth-three-step2/meth-three-step2.component.html","./src/app/meth-three-page/meth-three-step3/meth-three-step3.component.ts","./src/app/meth-three-page/meth-three-step3/meth-three-step3.component.html","./src/app/meth-two-page/meth-two-page.component.html","./src/app/meth-two-page/meth-two-page.component.ts","./src/app/meth-two-page/meth-two-step1/meth-two-step1.component.ts","./src/app/meth-two-page/meth-two-step1/meth-two-step1.component.html","./src/app/meth-two-page/meth-two-step2/meth-two-step2.component.ts","./src/app/meth-two-page/meth-two-step2/meth-two-step2.component.html","./src/app/meth-two-page/meth-two-step3/meth-two-step3.component.ts","./src/app/meth-two-page/meth-two-step3/meth-two-step3.component.html","./src/app/reg-page/reg-page.component.ts","./src/app/reg-page/reg-page.component.html","./src/app/services/api.service.ts","./src/app/services/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/charts.service.ts","./src/app/services/meth-five-data.service.ts","./src/app/services/meth-four-data.service.ts","./src/app/services/meth-one-data.service.ts","./src/app/services/meth-three-data.service.ts","./src/app/services/meth-two-data.service.ts","./src/app/services/rgb-smyk.service.ts","./src/app/shared/classes/token.interceptor.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$"],"names":[],"mappings":"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":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { MethOnePageComponent } from './meth-one-page/meth-one-page.component';\nimport { MethTwoPageComponent } from './meth-two-page/meth-two-page.component';\nimport { MethThreePageComponent } from './meth-three-page/meth-three-page.component';\nimport { MethFourPageComponent } from './meth-four-page/meth-four-page.component';\nimport { MethFivePageComponent } from './meth-five-page/meth-five-page.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { Authguard } from './services/auth.guard';\nimport { CheckimgPageComponent } from './checkimg-page/checkimg-page.component';\nimport { RegPageComponent } from './reg-page/reg-page.component';\nimport { HistoryPageComponent } from './history-page/history-page.component';\n\nconst routes: Routes = [\n  {path: '', component: MainPageComponent},\n  {path: 'login', component: LoginPageComponent},\n  {path: 'reg', component: RegPageComponent},\n  {path: 'check', component: CheckimgPageComponent},\n  {path: 'history', component: HistoryPageComponent, canActivate: [Authguard]},\n  {path: 'methone', component: MethOnePageComponent, canActivate: [Authguard]},\n  {path: 'methtwo', component: MethTwoPageComponent, canActivate: [Authguard]},\n  {path: 'meththree', component: MethThreePageComponent, canActivate: [Authguard]},\n  {path: 'methfour', component: MethFourPageComponent, canActivate: [Authguard]},\n  {path: 'methfive', component: MethFivePageComponent, canActivate: [Authguard]}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy', initialNavigation: 'enabled' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pd';\n}\n","<header>\n  <div class=\"content\">\n    <p [routerLink]=\"'/'\" style=\"cursor: pointer; outline: none;\">Смарт-Маркировка защиты продукции<br>by Moscow Polytech</p>\n  </div>\n</header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n<footer>\n  <div class=\"footer_top\"></div>\n  <div class=\"footer_bottom\">\n    <div class=\"footer_bottom__c\">© 2020 Московский политехнический университет</div>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ChartsModule } from 'ng2-charts';\nimport { from } from 'rxjs';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainPageComponent } from './main-page/main-page.component';\n\nimport { MethOnePageComponent } from './meth-one-page/meth-one-page.component';\nimport { MethOneStep1Component } from './meth-one-page/meth-one-step1/meth-one-step1.component';\nimport { MethOneStep2Component } from './meth-one-page/meth-one-step2/meth-one-step2.component';\nimport { MethOneStep3Component } from './meth-one-page/meth-one-step3/meth-one-step3.component';\n\nimport { MethTwoPageComponent } from './meth-two-page/meth-two-page.component';\nimport { MethTwoStep1Component } from './meth-two-page/meth-two-step1/meth-two-step1.component';\nimport { MethTwoStep2Component } from './meth-two-page/meth-two-step2/meth-two-step2.component';\nimport { MethTwoStep3Component } from './meth-two-page/meth-two-step3/meth-two-step3.component';\n\nimport { MethThreePageComponent } from './meth-three-page/meth-three-page.component';\nimport { MethThreeStep1Component } from './meth-three-page/meth-three-step1/meth-three-step1.component';\nimport { MethThreeStep2Component } from './meth-three-page/meth-three-step2/meth-three-step2.component';\nimport { MethThreeStep3Component } from './meth-three-page/meth-three-step3/meth-three-step3.component';\n\nimport { MethFourPageComponent } from './meth-four-page/meth-four-page.component';\nimport { MethFourStep1Component } from './meth-four-page/meth-four-step1/meth-four-step1.component';\nimport { MethFourStep2Component } from './meth-four-page/meth-four-step2/meth-four-step2.component';\nimport { MethFourStep3Component } from './meth-four-page/meth-four-step3/meth-four-step3.component';\nimport { MethFivePageComponent } from './meth-five-page/meth-five-page.component';\nimport { MethFiveStep1Component } from './meth-five-page/meth-five-step1/meth-five-step1.component';\nimport { MethFiveStep2Component } from './meth-five-page/meth-five-step2/meth-five-step2.component';\nimport { MethFiveStep3Component } from './meth-five-page/meth-five-step3/meth-five-step3.component';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { CheckimgPageComponent } from './checkimg-page/checkimg-page.component';\nimport { CheckimgResultComponent } from './checkimg-page/checkimg-result/checkimg-result.component';\nimport { TokenInterceptor } from './shared/classes/token.interceptor';\nimport { RegPageComponent } from './reg-page/reg-page.component';\nimport { HistoryPageComponent } from './history-page/history-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainPageComponent,\n    MethTwoPageComponent,\n    MethTwoStep1Component,\n    MethTwoStep2Component,\n    MethTwoStep3Component,\n    MethOnePageComponent,\n    MethOneStep1Component,\n    MethOneStep2Component,\n    MethOneStep3Component,\n    MethThreePageComponent,\n    MethThreeStep1Component,\n    MethThreeStep2Component,\n    MethThreeStep3Component,\n    MethFourPageComponent,\n    MethFourStep1Component,\n    MethFourStep2Component,\n    MethFourStep3Component,\n    MethFivePageComponent,\n    MethFiveStep1Component,\n    MethFiveStep2Component,\n    MethFiveStep3Component,\n    LoginPageComponent,\n    CheckimgPageComponent,\n    CheckimgResultComponent,\n    RegPageComponent,\n    HistoryPageComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ChartsModule,\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      multi: true,\n      useClass: TokenInterceptor\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { RgbCmykService } from '../services/rgb-smyk.service';\n\n@Component({\n  selector: 'app-checkimg-page',\n  templateUrl: './checkimg-page.component.html',\n  styleUrls: ['./checkimg-page.component.css']\n})\nexport class CheckimgPageComponent implements OnInit {\n\n  @ViewChild('m1s1c1') canvas: ElementRef\n  @Output() onResult: EventEmitter<any> = new EventEmitter()\n\n  isChoosen: boolean = false\n  isLoading: boolean = false\n  isImageLoaded: boolean = false\n  reader = new FileReader()\n  pic = new Image()\n  imgFile: File\n  imgDivHeight = 300\n  imgDivWidth = 0\n  imgUrl = ''\n\n  isResult = false\n  result\n\n  constructor(\n    private rgbCmykService: RgbCmykService,\n    private api: ApiService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  addPic(files) {\n    this.isImageLoaded = false\n    this.isLoading = true\n    this.isChoosen = false\n\t  this.reader.onload = () => {\n      let ctx = this.canvas.nativeElement.getContext('2d')\n      this.pic.onload = () => {\n        this.canvas.nativeElement.width = this.pic.width\n        this.canvas.nativeElement.height = this.pic.height\n        ctx.drawImage(this.pic, 0, 0)\n        this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n        this.imgDivWidth = this.pic.width * (this.imgDivHeight / this.pic.height)\n        this.devideOnChannels(ctx)\n        this.renderImage(ctx)\n        this.isImageLoaded = true\n        this.isLoading = false\n      }\n      this.pic.src = this.reader.result as string\n    }\n    this.reader.readAsDataURL(files[0])\n    this.imgFile = files[0]\n  }\n\n  devideOnChannels(ctx) {\n    let pixelData = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      let new_cmyk = this.rgbCmykService.rgb2cmyk(pixelData.data[i], pixelData.data[i + 1], pixelData.data[i + 2])\n    }\n  }\n\n  renderImage(ctx) {\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n    }\n    ctx.putImageData(imageData, 0, 0)\n  }\n\n  checkImg() {\n    const size = this.pic.width + 'x' + this.pic.height\n    this.api.checkImg(this.imgFile, size)\n      .subscribe(res => {\n        this.isResult = true\n        this.result = res\n      })\n  }\n\n}\n","<div class=\"content\">\n    <h2 class=\"content method\">Проверка изображения на наличие метки</h2>\n    <div class=\"choose_file\">\n        <label for=\"image_upload\" class=\"upload_label\">Выберите изображение для проверки (PNG, JPG)</label>\n        <input type=\"file\" id=\"image_upload\" (change)=\"addPic($event.target.files)\">\n    </div>\n    <section [ngStyle]=\"{display: isImageLoaded ? 'block' : 'none'}\">\n        <canvas style=\"display: none\" #m1s1c1></canvas>\n        <div class=\"canvasImage\">\n            <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n        </div>\n    </section>\n    <div class=\"loading\" *ngIf=\"isLoading\">\n        <p>Загрузка</p>\n    </div>\n    <div class=\"btns\" *ngIf=\"isImageLoaded\">\n        <button (click)=\"checkImg()\" [ngClass]=\"{btn: true, btn_enabled: true}\">Проверить</button>\n    </div>\n</div>\n\n<app-checkimg-result *ngIf=\"isResult\" [result]=\"result\" (onClose)=\"isResult = false\"></app-checkimg-result>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CheckResult } from 'src/app/shared/interfaces/interfaces';\n\n@Component({\n  selector: 'app-checkimg-result',\n  templateUrl: './checkimg-result.component.html',\n  styleUrls: ['./checkimg-result.component.css']\n})\nexport class CheckimgResultComponent implements OnInit {\n\n  @Input('result') inResult: CheckResult\n  @Output() onClose: EventEmitter<any> = new EventEmitter()\n\n  result: CheckResult\n  compare = {\n    1: 'Изъятие нескольких уровней в диапазоне канала',\n    2: 'Введение штрихового кода в тоновый диапазон канала RGB',\n    3: 'Введение 2D штрихового кода (QR) в цифровое изображение',\n    4: 'Изъятие 20-30 уровней в диапазоне',\n    5: 'Введение флуоресцентного тонера'\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.inResult)\n    this.result = {result: this.inResult.result ? 'метка присутствует.' : 'метка отсутствует.', info: this.inResult.info == 'none' ? '' : this.inResult.info, method: this.compare[this.inResult.type]}\n  }\n\n  close() {\n    this.onClose.emit(true)\n  }\n\n}\n","<div class=\"popup-bg\">\n    <div class=\"popup\">\n        <div class=\"popup__close\" (click)=\"close()\"></div>\n        <div class=\"popup-result\">\n            <h2 class=\"popup-result__h\">Результат проверки</h2>\n            <p class=\"popup-result__p\">{{'В загруженном изображении ' + result.result}}</p>\n            <p class=\"popup-result__p\">{{result.method}}</p>\n            <p class=\"popup-result__p\">{{result.info}}</p>\n        </div>\n    </div>\n</div>","<div class=\"content\">\n    <h2 class=\"method\">История введения меток</h2>\n    <p *ngIf=\"labels.length < 1\">Ваша история введения меток пуста.</p>\n    <div class=\"history\">\n        <div class=\"history__line\" *ngFor=\"let l of labels\">\n            <img class=\"history__cell history__img\" [ngStyle]=\"{'background-image': 'url(http://localhost:5000/' + l.linkImgAfter.replace('\\\\', '/') + ')'}\">\n            <div class=\"history__cell\">{{compare[l.type]}}</div>\n            <div class=\"history__cell\">{{l.date | date: 'short'}}</div>\n            <div class=\"history__cell\" style=\"cursor: pointer;\" (click)=\"getFile('http://localhost:5000/' + l.linkImgAfter.replace('\\\\', '/'))\">Открыть оригинал</div>\n        </div>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-history-page',\n  templateUrl: './history-page.component.html',\n  styleUrls: ['./history-page.component.css']\n})\nexport class HistoryPageComponent implements OnInit {\n\n  labels = []\n  compare = {\n    1: 'Изъятие нескольких уровней в диапазоне канала',\n    2: 'Введение штрихового кода в тоновый диапазон канала RGB',\n    3: 'Введение 2D штрихового кода (QR) в цифровое изображение',\n    4: 'Изъятие 20-30 уровней в диапазоне',\n    5: 'Введение флуоресцентного тонера'\n  }\n\n  constructor(private api: ApiService, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.api.getHistory()\n      .subscribe((res: any[]) => {\n        console.log(res)\n        this.labels = res\n      })\n  }\n\n  getFile(file) {\n    window.open(file)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent implements OnInit {\n\n  form: FormGroup\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      login: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  login() {\n    this.auth.login(this.form.value)\n      .subscribe(n => {\n        console.log(n)\n        this.router.navigate(['/'])\n      })\n  }\n\n}\n","<div class=\"content\">\n    <div class=\"log-form\">\n        <div class=\"log-form__form\">\n            <form (submit)=\"login()\" [formGroup]=\"form\">\n                <span>Вход</span><span> |  </span><span [routerLink]=\"'/reg'\" class=\"secondary-text\">Регистрация</span>\n                <input type=\"text\" placeholder=\"Логин\" formControlName=\"login\">\n                <input type=\"password\" placeholder=\"Пароль\" formControlName=\"password\">\n                <button type=\"submit\" class=\"btn\" [ngClass]=\"form.valid ? 'btn_enabled' : 'btn_disabled'\">Вход</button>\n            </form>\n        </div>\n    </div>\n</div>","<div class=\"content\">\n  <div class=\"main-menu-line\">\n    <h1>СМАРТ МАРКИРОВКА<br>ДЛЯ ЗАЩИТЫ ПРОДУКЦИИ</h1>\n    <div class=\"user-signin\" [routerLink]=\"'/login'\" *ngIf=\"!auth.isAuth(); else noauth_log\">\n      <div class=\"user-signin__img\"></div>\n      Войти\n    </div>\n  </div>\n  <button class=\"btn btn_enabled btn-check-img\" [routerLink]=\"['/check']\">Проверить изображение на наличие метки</button>\n  <div *ngIf=\"auth.isAuth(); else noauth\">\n    <h2>Выберете метод защиты:</h2>\n    <div class=\"methods\">\n      <div class=\"btn\"><a [routerLink]=\"['/methone']\"><h2>Изъятие нескольких уровней в диапазоне канала</h2></a><div class=\"hoverp1\"><p></p></div></div>\n      <div class=\"btn\"><a [routerLink]=\"['/methtwo']\"><h2>Введение штрихового кода в тоновый диапазон канала RGB</h2></a><div class=\"hoverp1\"><p></p></div></div>\n      <div class=\"btn\"><a [routerLink]=\"['/meththree']\"><h2>Введение 2D штрихового кода (QR) в цифровое изображение</h2></a><div class=\"hoverp1\"><p></p></div></div>\n      <div class=\"btn\"><a [routerLink]=\"['/methfour']\"><h2>Изъятие 20-30 уровней в диапазоне</h2></a><div class=\"hoverp1\"><p></p></div></div>\n      <div class=\"btn\"><a [routerLink]=\"['/methfive']\"><h2>Введение флуоресцентного тонера</h2></a><div class=\"hoverp1\"><p></p></div></div>\n    </div>\n  </div>\n</div>\n\n<ng-template #noauth>\n  <p class=\"noauth\">Для введения метки необходимо войти.</p>\n</ng-template>\n\n<ng-template #noauth_log>\n  <div class=\"user-signin\">\n    <div class=\"user-signin__item\" [routerLink]=\"'/history'\">\n      <div class=\"user-signin__img_history\"></div>\n      <div class=\"user-signin__history\">История меток</div>\n    </div>\n    <div class=\"user-signin__item\"  (click)=\"auth.logout()\">\n      <div class=\"user-signin__img_logout\"></div>\n      Выйти\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('auth-token') != null) {\n      this.auth.setToken(localStorage.getItem('auth-token'))\n    }\n  }\n\n}\n","<h2 class=\"content method\">{{method}}</h2>\n<h2 class=\"content step\">{{'Шаг ' + step}}</h2>\n<div [ngSwitch]=\"step\">\n    <app-meth-five-step1 *ngSwitchCase=\"1\" (onNext)=\"nextStep()\"></app-meth-five-step1>\n    <app-meth-five-step2 *ngSwitchCase=\"2\" (onNext)=\"nextStep()\" (onLast)=\"lastStep()\"></app-meth-five-step2>\n    <app-meth-five-step3 *ngSwitchCase=\"3\" (onLast)=\"lastStep()\"></app-meth-five-step3>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meth-five-page',\n  templateUrl: './meth-five-page.component.html',\n  styleUrls: ['./meth-five-page.component.css']\n})\nexport class MethFivePageComponent implements OnInit {\n\n  method = 'Введение флуоресцентного тонера'\n  step: number = 1\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  lastStep() {\n    this.step--;\n  }\n  nextStep() {\n    this.step++;\n  }\n}\n","import { Component, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { RgbCmykService } from 'src/app/services/rgb-smyk.service';\nimport { MethFiveDataService } from 'src/app/services/meth-five-data.service';\n\n@Component({\n  selector: 'app-meth-five-step1',\n  templateUrl: './meth-five-step1.component.html',\n  styleUrls: ['./meth-five-step1.component.css']\n})\nexport class MethFiveStep1Component {\n\n  @ViewChild('m5s1c1') canvas: ElementRef\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  isChoosen: boolean = false\n  isLoading: boolean = false\n  isImageLoaded: boolean = false\n  reader = new FileReader()\n  pic = new Image()\n  imgDivHeight = 300\n  imgDivWidth = 0\n  imgUrl = ''\n\n  constructor(\n    private rgbCmykService: RgbCmykService,\n    private methFiveDataService: MethFiveDataService,\n  ) { }\n\n  addPic(files) {\n    this.isImageLoaded = false\n    this.isLoading = true\n    this.isChoosen = false\n\t  this.reader.onload = () => {\n      let ctx = this.canvas.nativeElement.getContext('2d')\n      this.pic.onload = () => {\n        this.methFiveDataService.fullZeroing()\n        this.methFiveDataService.picParams = {width: this.pic.width, height: this.pic.height}\n        this.canvas.nativeElement.width = this.pic.width\n        this.canvas.nativeElement.height = this.pic.height\n        ctx.drawImage(this.pic, 0, 0)\n        this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n        this.imgDivWidth = this.pic.width * (this.imgDivHeight / this.pic.height)\n        this.devideOnChannels(ctx)\n        this.renderImage(ctx)\n        this.isImageLoaded = true\n        this.isLoading = false\n      }\n      this.pic.src = this.reader.result as string\n    }\n    this.reader.readAsDataURL(files[0])\n  }\n\n  devideOnChannels(ctx) {\n    let pixelData = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      let new_cmyk = this.rgbCmykService.rgb2cmyk(pixelData.data[i], pixelData.data[i + 1], pixelData.data[i + 2])\n      this.methFiveDataService.arrChannelC.push(Math.floor(new_cmyk.c))\n      this.methFiveDataService.arrChannelM.push(Math.floor(new_cmyk.m))\n      this.methFiveDataService.arrChannelY.push(Math.floor(new_cmyk.y))\n      this.methFiveDataService.arrChannelK.push(Math.floor(new_cmyk.k))\n    }\n  }\n\n  renderImage(ctx) {\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      imageData.data[i + 0] = this.methFiveDataService.newImageArray[i + 0]\n      imageData.data[i + 1] = this.methFiveDataService.newImageArray[i + 1]\n      imageData.data[i + 2] = this.methFiveDataService.newImageArray[i + 2]\n      imageData.data[i + 3] = this.methFiveDataService.newImageArray[i + 3]\n    }\n    ctx.putImageData(imageData, 0, 0)\n  }\n\n  nextStep() {\n    this.onNext.emit(null)\n  }\n}\n","<div class=\"choose_file\">\n    <label for=\"image_upload\" class=\"upload_label\">Выберите изображение для загрузки (PNG, JPG)</label>\n    <input type=\"file\" id=\"image_upload\" (change)=\"addPic($event.target.files)\">\n</div>\n<section [ngStyle]=\"{display: isImageLoaded ? 'block' : 'none'}\">\n    <canvas style=\"display: none;\" #m5s1c1></canvas>\n    <div class=\"canvasImage\">\n        <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n    </div>\n</section>\n<div class=\"loading\" *ngIf=\"isLoading\">\n    <p>Загрузка</p>\n</div>\n<div class=\"btns\" *ngIf=\"isImageLoaded\">\n    <button (click)=\"nextStep()\" class=\"btn btn_enabled\">Далее</button>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { RgbCmykService } from 'src/app/services/rgb-smyk.service';\nimport { MethFiveDataService } from 'src/app/services/meth-five-data.service';\n\n@Component({\n  selector: 'app-meth-five-step2',\n  templateUrl: './meth-five-step2.component.html',\n  styleUrls: ['./meth-five-step2.component.css']\n})\nexport class MethFiveStep2Component implements OnInit {\n\n  @ViewChild('m5s2c1', {static: true}) canvas: ElementRef\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  blurRadius = 3\n  trasholdL = 5\n  trasholdU = 99\n\n  isLoading: boolean = false\n  imgDivHeight = 600\n  imgDivWidth = 0\n  imgUrl = ''\n\n  constructor(\n    private methFiveDataService: MethFiveDataService,\n  ) { }\n\n  ngOnInit() {\n    this.isLoading = false\n    this.canvas.nativeElement.width = this.methFiveDataService.picParams.width\n    this.canvas.nativeElement.height = this.methFiveDataService.picParams.height\n    let ctx = this.canvas.nativeElement.getContext('2d')\n    this.methFiveDataService.findEdges(this.blurRadius, this.trasholdL, this.trasholdU)\n    this.renderImage(ctx)\n    this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n    this.imgDivWidth = this.methFiveDataService.picParams.width * (this.imgDivHeight / this.methFiveDataService.picParams.height)\n  }\n\n  renderImage(ctx) {\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      imageData.data[i + 0] = this.methFiveDataService.newImageArray[i + 0]\n      imageData.data[i + 1] = this.methFiveDataService.newImageArray[i + 1]\n      imageData.data[i + 2] = this.methFiveDataService.newImageArray[i + 2]\n      imageData.data[i + 3] = this.methFiveDataService.newImageArray[i + 3]\n    }\n    ctx.putImageData(imageData, 0, 0)\n  }\n\n  changeValues() {\n    console.log(this.isLoading)\n    let ctx = this.canvas.nativeElement.getContext('2d')\n    this.isLoading = true\n    this.methFiveDataService.findEdges(this.blurRadius, this.trasholdL, this.trasholdU)\n    this.renderImage(ctx)\n    this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n    this.isLoading = false\n  }\n\n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  nextStep() {\n    this.methFiveDataService.generateFLUImage()\n    this.onNext.emit(null)\n  }\n}\n","<h2 class=\"choose_channelH content\">Выберите параметры для канала FLU</h2>\n<div class=\"controls content\">\n    <div class=\"control\">\n        <p>{{'Размытие: ' + blurRadius}}</p>\n        <input type=\"range\" min=\"0\" max=\"20\" [(ngModel)]=\"blurRadius\" (change)=\"changeValues()\">\n    </div>\n    <div class=\"control\">\n        <p>{{'Нижний порог: ' + trasholdL}}</p>\n        <input type=\"range\" min=\"0\" max=\"100\" [(ngModel)]=\"trasholdL\" (change)=\"changeValues()\">\n    </div>\n    <div class=\"control\">\n        <p>{{'Верхний порог: ' + trasholdU}}</p>\n        <input type=\"range\" min=\"0\" max=\"100\" [(ngModel)]=\"trasholdU\" (change)=\"changeValues()\">\n    </div>\n</div>\n<div class=\"codeCanvas\" [ngStyle]=\"{display: isLoading ? 'none' : 'block'}\">\n    <canvas #m5s2c1 style=\"display: none\"></canvas>\n    <div class=\"canvasImage\">\n        <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n    </div>\n</div>\n<div class=\"loading\" *ngIf=\"isLoading\">Загрузка...</div>\n<div class=\"btns\">\n    <button (click)=\"lastStep()\" class=\"btn btn_enabled\" style=\"margin-right: 2px;\">Назад</button>\n    <button (click)=\"nextStep()\" class=\"btn btn_enabled\">Далее</button>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MethFiveDataService } from 'src/app/services/meth-five-data.service';\n\n@Component({\n  selector: 'app-meth-five-step3',\n  templateUrl: './meth-five-step3.component.html',\n  styleUrls: ['./meth-five-step3.component.css']\n})\nexport class MethFiveStep3Component implements OnInit {\n\n  @ViewChild('m5s3c1', {static: true}) canvas: ElementRef\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n\n  imgUrl\n  imgDivHeight = 600\n  imgDivWidth = 0\n\n  constructor(private api: ApiService, private methFiveDataService: MethFiveDataService) { }\n\n  ngOnInit() {\n    this.canvas.nativeElement.width = this.methFiveDataService.picParams.width;\n    this.canvas.nativeElement.height = this.methFiveDataService.picParams.height;\n    const ctx = this.canvas.nativeElement.getContext('2d');\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      imageData.data[i + 0] = this.methFiveDataService.newImageArray[i + 0]\n      imageData.data[i + 1] = this.methFiveDataService.newImageArray[i + 1]\n      imageData.data[i + 2] = this.methFiveDataService.newImageArray[i + 2]\n      imageData.data[i + 3] = this.methFiveDataService.newImageArray[i + 3]\n    }\n    ctx.putImageData(imageData, 0, 0)\n    this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n    this.imgDivWidth = this.canvas.nativeElement.width * (this.imgDivHeight / this.canvas.nativeElement.height)\n    const size = this.canvas.nativeElement.width + 'x' + this.canvas.nativeElement.height\n    const img = new File([this.api.dataURItoBlob(this.imgUrl)], 'm5result.png');\n    this.api.addToDb('5', img, size)\n      .subscribe(res => {\n        console.log(res)\n      })\n  }\n  \n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  saveImage() {\n    const link = document.createElement('a')\n    link.download = 'filename.png'\n    link.href = this.canvas.nativeElement.toDataURL()\n    link.click()\n  }\n}\n","<canvas #m5s3c1 style=\"display: none\"></canvas>\n<div class=\"canvasImage\">\n    <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n</div>\n<div class=\"btns\">\n    <button class=\"btn btn_enabled\" (click)=\"lastStep()\" style=\"margin-right: 2px;\">Назад</button>\n    <button class=\"btn btn_enabled\" (click)=\"saveImage()\">Сохранить</button>\n</div>\n","<h2 class=\"content method\">{{method}}</h2>\n<h2 class=\"content step\">{{'Шаг ' + step}}</h2>\n<div [ngSwitch]=\"step\">\n    <app-meth-four-step1 *ngSwitchCase=\"1\" (onNext)=\"nextStep()\"></app-meth-four-step1>\n    <app-meth-four-step2 *ngSwitchCase=\"2\" (onNext)=\"nextStep()\" (onLast)=\"lastStep()\"></app-meth-four-step2>\n    <app-meth-four-step3 *ngSwitchCase=\"3\" (onLast)=\"lastStep()\"></app-meth-four-step3>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meth-four-page',\n  templateUrl: './meth-four-page.component.html',\n  styleUrls: ['./meth-four-page.component.css']\n})\nexport class MethFourPageComponent implements OnInit {\n\n  method = 'Изъятие 20-30 уровней в диапазоне'\n  step: number = 1\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  lastStep() {\n    this.step--;\n  }\n  nextStep() {\n    this.step++;\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { MethFourDataService } from 'src/app/services/meth-four-data.service';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, Color } from 'ng2-charts';\nimport { RgbCmykService } from 'src/app/services/rgb-smyk.service';\nimport { ChartsService } from 'src/app/services/charts.service';\n\n@Component({\n  selector: 'app-meth-four-step1',\n  templateUrl: './meth-four-step1.component.html',\n  styleUrls: ['./meth-four-step1.component.css']\n})\nexport class MethFourStep1Component implements OnInit {\n\n  @ViewChild('m4s1c1') canvas: ElementRef\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  isChoosen: boolean = false\n  isLoading: boolean = false\n  isImageLoaded: boolean = false\n  reader = new FileReader()\n  pic = new Image()\n  imgDivHeight = 300\n  imgDivWidth = 0\n  imgUrl = ''\n  choosenChannel = ''\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  barChartType: ChartType = 'bar'\n  barChartLegend = true\n  barChartPlugins = []\n\n  barChartLabels1: Label[] = []\n  barChartColor1: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'cyan',\n  }]\n  barChartData1: ChartDataSets[] = [\n    { data: [], label: 'C Channel' }\n  ]\n\n\n  barChartLabels2: Label[] = []\n  barChartColor2: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'magenta',\n  }]\n  barChartData2: ChartDataSets[] = [\n    { data: [], label: 'M Channel' }\n  ]\n\n  barChartLabels3: Label[] = []\n  barChartColor3: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'yellow',\n  }]\n  barChartData3: ChartDataSets[] = [\n    { data: [], label: 'Y Channel' }\n  ]\n\n  barChartLabels4: Label[] = []\n  barChartColor4: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'black',\n  }]\n  barChartData4: ChartDataSets[] = [\n    { data: [], label: 'K Channel' }\n  ]\n\n  constructor(\n    private rgbCmykService: RgbCmykService,\n    private methFourDataService: MethFourDataService,\n    private chartsService: ChartsService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addPic(files) {\n    this.isImageLoaded = false\n    this.isLoading = true\n    this.isChoosen = false\n\t  this.reader.onload = () => {\n      let ctx = this.canvas.nativeElement.getContext('2d')\n      this.pic.onload = () => {\n        this.choosenChannel = ''\n        this.methFourDataService.fullZeroing()\n        this.methFourDataService.picParams = {width: this.pic.width, height: this.pic.height}\n        this.canvas.nativeElement.width = this.pic.width\n        this.canvas.nativeElement.height = this.pic.height\n        ctx.drawImage(this.pic, 0, 0)\n        this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n        this.imgDivWidth = this.pic.width * (this.imgDivHeight / this.pic.height)\n        this.devideOnChannels(ctx)\n        this.isImageLoaded = true\n        this.isLoading = false\n      }\n      this.pic.src = this.reader.result as string\n    }\n    this.reader.readAsDataURL(files[0])\n  }\n\n  devideOnChannels(ctx) {\n    let pixelData = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    this.chartsService.renderChartsCMYK(4, pixelData.data)\n    this.renderCharts(this.methFourDataService.amountChannelC, this.methFourDataService.amountChannelM, this.methFourDataService.amountChannelY, this.methFourDataService.amountChannelK)\n  }\n\n  renderCharts(typeC, typeM, typeY, typeK) {\n    let chartColumnNames = []\n    for (let i = 0; i <= 100; i++) {\n      chartColumnNames[i] = i\n    }\n\n    this.barChartLabels1 = chartColumnNames\n    this.barChartData1 = [\n      { data: typeC, label: 'C Channel' }\n    ]\n\n    this.barChartLabels2 = chartColumnNames\n    this.barChartData2 = [\n      { data: typeM, label: 'M Channel' }\n    ]\n\n    this.barChartLabels3 = chartColumnNames\n    this.barChartData3 = [\n      { data: typeY, label: 'Y Channel' }\n    ]\n\n    this.barChartLabels4 = chartColumnNames\n    this.barChartData4 = [\n      { data: typeK, label: 'K Channel' }\n    ]\n  }\n\n  nextStep() {\n    this.onNext.emit(null)\n  }\n  \n}\n","<div class=\"choose_file\">\n    <label for=\"image_upload\" class=\"upload_label\">Выберите изображение для загрузки (PNG, JPG)</label>\n    <input type=\"file\" id=\"image_upload\" (change)=\"addPic($event.target.files)\">\n</div>\n<section [ngStyle]=\"{display: isImageLoaded ? 'block' : 'none'}\">\n    <canvas style=\"display: none\" #m4s1c1></canvas>\n    <div class=\"canvasImage\">\n        <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n    </div>\n    <div class=\"channels\">\n        <div class=\"channels__grid_cmyk\">\n            <div class=\"canvas_gholder\">\n                <canvas baseChart \n                [datasets]=\"barChartData1\"\n                [labels]=\"barChartLabels1\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor1\">\n                </canvas>\n            </div>\n            <div class=\"canvas_gholder\">\n                <canvas baseChart \n                [datasets]=\"barChartData2\"\n                [labels]=\"barChartLabels2\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor2\">\n                </canvas>\n            </div>\n            <div class=\"canvas_gholder\">\n                <canvas baseChart \n                [datasets]=\"barChartData3\"\n                [labels]=\"barChartLabels3\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor3\">\n                </canvas>\n            </div>\n            <div class=\"canvas_gholder\">\n                <canvas baseChart \n                [datasets]=\"barChartData4\"\n                [labels]=\"barChartLabels4\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor4\">\n                </canvas>\n            </div>\n        </div>\n    </div>\n</section>\n<div class=\"loading\" *ngIf=\"isLoading\">\n    <p>Загрузка</p>\n</div>\n<div class=\"btns\" *ngIf=\"isImageLoaded\">\n    <button (click)=\"nextStep()\" class=\"btn btn_enabled\">Далее</button>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { RgbCmykService } from 'src/app/services/rgb-smyk.service';\nimport { MethFourDataService } from 'src/app/services/meth-four-data.service';\n\n@Component({\n  selector: 'app-meth-four-step2',\n  templateUrl: './meth-four-step2.component.html',\n  styleUrls: ['./meth-four-step2.component.css']\n})\nexport class MethFourStep2Component implements OnInit {\n\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  codeNum: string = '20'\n\n  constructor(private rgbCmykService: RgbCmykService, private methFourDataService: MethFourDataService) { }\n\n  ngOnInit() {\n  }\n\n  lastStep() {\n    this.onLast.emit(null)\n  }\n  \n  nextStep() {\n    let min = Math.floor(Math.random() * (50 - 0))\n    let max = min + +this.codeNum\n    let newPixel\n    for (let i = min; i < max; i++) {\n      this.methFourDataService.arrChannelY.forEach((n, index, arr) => {\n        if (n == i) {\n          arr[index] = 0 //why not\n        }\n      })\n    }\n    for (let i = 0; i < this.methFourDataService.arrChannelC.length; i++) {\n      newPixel = this.rgbCmykService.cmyk2rgb(this.methFourDataService.arrChannelC[i], this.methFourDataService.arrChannelM[i], this.methFourDataService.arrChannelY[i], this.methFourDataService.arrChannelK[i])\n      this.methFourDataService.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n    this.onNext.emit(null)\n  }\n}\n","<h2 class=\"choose_channelH content\">Выберите количество уровней светлоты для изъятия в жёлтом канале</h2>\n<div class=\"codeInput content\">\n    <input type=\"range\" min=\"20\" max=\"30\" [(ngModel)]=\"codeNum\">\n    <div class=\"num\">\n        {{codeNum}}\n    </div>\n</div>\n<div class=\"btns\">\n    <button (click)=\"lastStep()\" class=\"btn btn_enabled\" style=\"margin-right: 2px;\">Назад</button>\n    <button (click)=\"nextStep()\" class=\"btn btn_enabled\">Далее</button>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { MethFourDataService } from 'src/app/services/meth-four-data.service';\nimport { ChartsService } from 'src/app/services/charts.service';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, Color } from 'ng2-charts';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-meth-four-step3',\n  templateUrl: './meth-four-step3.component.html',\n  styleUrls: ['./meth-four-step3.component.css']\n})\nexport class MethFourStep3Component implements OnInit {\n\n  @ViewChild('m4s3c1', {static: true}) canvas: ElementRef\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n\n  imgUrl\n  imgDivHeight = 600\n  imgDivWidth = 0\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  barChartType: ChartType = 'bar'\n  barChartLegend = true\n  barChartPlugins = []\n\n  barChartLabels1: Label[] = []\n  barChartColor1: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'cyan',\n  }]\n  barChartData1: ChartDataSets[] = [\n    { data: [], label: 'C Channel' }\n  ]\n\n\n  barChartLabels2: Label[] = []\n  barChartColor2: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'magenta',\n  }]\n  barChartData2: ChartDataSets[] = [\n    { data: [], label: 'M Channel' }\n  ]\n\n  barChartLabels3: Label[] = []\n  barChartColor3: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'yellow',\n  }]\n  barChartData3: ChartDataSets[] = [\n    { data: [], label: 'Y Channel' }\n  ]\n\n  barChartLabels4: Label[] = []\n  barChartColor4: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'black',\n  }]\n  barChartData4: ChartDataSets[] = [\n    { data: [], label: 'K Channel' }\n  ]\n\n  constructor(private api: ApiService, private methFourDataService: MethFourDataService, private chartsService: ChartsService) { }\n\n  ngOnInit() {\n    this.canvas.nativeElement.width = this.methFourDataService.picParams.width;\n    this.canvas.nativeElement.height = this.methFourDataService.picParams.height;\n    const ctx = this.canvas.nativeElement.getContext('2d');\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      imageData.data[i + 0] = this.methFourDataService.newImageArray[i + 0]\n      imageData.data[i + 1] = this.methFourDataService.newImageArray[i + 1]\n      imageData.data[i + 2] = this.methFourDataService.newImageArray[i + 2]\n      imageData.data[i + 3] = this.methFourDataService.newImageArray[i + 3]\n    }\n    ctx.putImageData(imageData, 0, 0)\n    this.chartsService.renderChartsCMYK(4, imageData.data)\n    this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n    this.imgDivWidth = this.canvas.nativeElement.width * (this.imgDivHeight / this.canvas.nativeElement.height)\n    const size = this.canvas.nativeElement.width + 'x' + this.canvas.nativeElement.height\n    const img = new File([this.api.dataURItoBlob(this.imgUrl)], 'm4result.png');\n    this.api.addToDb('4', img, size)\n      .subscribe(res => {\n        console.log(res)\n      })\n    this.renderCharts(this.methFourDataService.amountChannelC, this.methFourDataService.amountChannelM, this.methFourDataService.amountChannelY, this.methFourDataService.amountChannelK)\n  }\n\n  renderCharts(typeC, typeM, typeY, typeK) {\n    let chartColumnNames = []\n    for (let i = 0; i <= 100; i++) {\n      chartColumnNames[i] = i\n    }\n\n    this.barChartLabels1 = chartColumnNames\n    this.barChartData1 = [\n      { data: typeC, label: 'C Channel' }\n    ]\n\n    this.barChartLabels2 = chartColumnNames\n    this.barChartData2 = [\n      { data: typeM, label: 'M Channel' }\n    ]\n\n    this.barChartLabels3 = chartColumnNames\n    this.barChartData3 = [\n      { data: typeY, label: 'Y Channel' }\n    ]\n\n    this.barChartLabels4 = chartColumnNames\n    this.barChartData4 = [\n      { data: typeK, label: 'K Channel' }\n    ]\n  }\n  \n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  saveImage() {\n    const link = document.createElement('a')\n    link.download = 'filename.png'\n    link.href = this.canvas.nativeElement.toDataURL()\n    link.click()\n  }\n}\n","<canvas #m4s3c1 style=\"display: none\"></canvas>\n<div class=\"canvasImage\">\n    <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n</div>\n<div class=\"channels\">\n    <div class=\"channels__grid_cmyk\">\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData1\"\n            [labels]=\"barChartLabels1\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor1\">\n            </canvas>\n        </div>\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData2\"\n            [labels]=\"barChartLabels2\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor2\">\n            </canvas>\n        </div>\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData3\"\n            [labels]=\"barChartLabels3\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor3\">\n            </canvas>\n        </div>\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData4\"\n            [labels]=\"barChartLabels4\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor4\">\n            </canvas>\n        </div>\n    </div>\n</div>\n<div class=\"btns\">\n    <button class=\"btn btn_enabled\" (click)=\"lastStep()\" style=\"margin-right: 2px;\">Назад</button>\n    <button class=\"btn btn_enabled\" (click)=\"saveImage()\">Сохранить</button>\n</div>\n","<h1 class=\"content method\">{{method}}</h1>\n<h2 class=\"content step\">{{'Шаг ' + step}}</h2>\n<div [ngSwitch]=\"step\">\n    <app-meth-one-step1 *ngSwitchCase=\"1\" (onNext)=\"nextStep()\"></app-meth-one-step1>\n    <app-meth-one-step2 *ngSwitchCase=\"2\" (onNext)=\"nextStep()\" (onLast)=\"lastStep()\"></app-meth-one-step2>\n    <app-meth-one-step3 *ngSwitchCase=\"3\" (onLast)=\"lastStep()\"></app-meth-one-step3>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meth-one-page',\n  templateUrl: './meth-one-page.component.html',\n  styleUrls: ['./meth-one-page.component.css']\n})\nexport class MethOnePageComponent implements OnInit {\n\n  method = 'Изъятие нескольких уровней в диапазоне канала'\n  step: number = 1\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  lastStep() {\n    this.step--;\n  }\n  nextStep() {\n    this.step++;\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, Color } from 'ng2-charts';\nimport { MethOneDataService } from 'src/app/services/meth-one-data.service';\nimport { ChartsService } from 'src/app/services/charts.service';\n\n@Component({\n  selector: 'app-meth-one-step1',\n  templateUrl: './meth-one-step1.component.html',\n  styleUrls: ['./meth-one-step1.component.css']\n})\n\nexport class MethOneStep1Component {\n\n  @ViewChild('m1s1c1') canvas: ElementRef\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  isChoosen: boolean = false\n  isLoading: boolean = false\n  isImageLoaded: boolean = false\n  reader = new FileReader()\n  pic = new Image()\n  imgDivHeight = 300\n  imgDivWidth = 0\n  imgUrl = ''\n  choosenChannel = this.methOneDataService.choosenChannel\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  barChartType: ChartType = 'bar'\n  barChartLegend = true\n  barChartPlugins = []\n\n  barChartLabels1: Label[] = []\n  barChartColor1: Color[] = [{borderColor: 'black', backgroundColor: 'red'}]\n  barChartData1: ChartDataSets[] = [{data: [], label: 'R Channel'}]\n\n  barChartLabels2: Label[] = []\n  barChartColor2: Color[] = [{borderColor: 'black', backgroundColor: 'green'}]\n  barChartData2: ChartDataSets[] = [{ data: [], label: 'G Channel' }]\n\n  barChartLabels3: Label[] = []\n  barChartColor3: Color[] = [{borderColor: 'black', backgroundColor: 'blue'}]\n  barChartData3: ChartDataSets[] = [{ data: [], label: 'B Channel'}]\n\n  constructor(private methOneDataService: MethOneDataService, private chartsService: ChartsService) { }\n\n  addPic(files) {\n    this.isImageLoaded = false\n    this.isLoading = true\n    this.isChoosen = false\n\t  this.reader.onload = () => {\n      let ctx = this.canvas.nativeElement.getContext('2d')\n      this.pic.onload = () => {\n        this.choosenChannel = ''\n        this.methOneDataService.fullZeroing()\n        this.methOneDataService.picParams = {width: this.pic.width, height: this.pic.height}\n        this.canvas.nativeElement.width = this.pic.width\n        this.canvas.nativeElement.height = this.pic.height\n        ctx.drawImage(this.pic, 0, 0)\n        this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n        this.imgDivWidth = this.pic.width * (this.imgDivHeight / this.pic.height)\n        this.devideOnChannels(ctx)\n        this.isImageLoaded = true\n        this.isLoading = false\n      }\n      this.pic.src = this.reader.result as string\n    }\n    this.reader.readAsDataURL(files[0])\n  }\n\n  devideOnChannels(ctx) {\n    let pixelData = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    this.chartsService.renderChartsRGB(1, pixelData.data)\n    this.renderCharts(this.methOneDataService.amountChannelR, this.methOneDataService.amountChannelG, this.methOneDataService.amountChannelB)\n  }\n\n  renderCharts(typeR, typeG, typeB) {\n    let chartColumnNames = []\n    for (let i = 0; i <= 255; i++) {\n      chartColumnNames[i] = i\n    }\n\n    this.barChartLabels1 = chartColumnNames\n    this.barChartData1 = [\n      { data: typeR, label: 'R Channel' }\n    ]\n\n    this.barChartLabels2 = chartColumnNames\n    this.barChartData2 = [\n      { data: typeG, label: 'G Channel' }\n    ]\n\n    this.barChartLabels3 = chartColumnNames\n    this.barChartData3 = [\n      { data: typeB, label: 'B Channel' }\n    ]\n  }\n\n  chooseChannel(channel) {\n    this.isChoosen = true\n    this.methOneDataService.choosenChannel = channel\n    this.choosenChannel = channel\n  }\n\n  nextStep() {\n    this.onNext.emit(null)\n  }\n}\n","<div class=\"choose_file\">\n    <label for=\"image_upload\" class=\"upload_label\">Выберите изображение для загрузки (PNG, JPG)</label>\n    <input type=\"file\" id=\"image_upload\" (change)=\"addPic($event.target.files)\">\n</div>\n<section [ngStyle]=\"{display: isImageLoaded ? 'block' : 'none'}\">\n    <canvas style=\"display: none\" #m1s1c1></canvas>\n    <div class=\"canvasImage\">\n        <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n    </div>\n    <h2 class=\"choose_channelH content\">Выберите один из каналов RGB</h2>\n    <div class=\"channels\">\n        <div class=\"channels__grid_rgb\">\n            <div class=\"canvas_gholder\" (click)=\"chooseChannel('r')\">\n                <canvas baseChart \n                [datasets]=\"barChartData1\"\n                [labels]=\"barChartLabels1\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor1\">\n                </canvas>\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'r'\"></div>\n            </div>\n            <div class=\"canvas_gholder\" (click)=\"chooseChannel('g')\">\n                <canvas baseChart \n                [datasets]=\"barChartData2\"\n                [labels]=\"barChartLabels2\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor2\">\n                </canvas>\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'g'\"></div>\n            </div>\n            <div class=\"canvas_gholder\" (click)=\"chooseChannel('b')\">\n                <canvas baseChart \n                [datasets]=\"barChartData3\"\n                [labels]=\"barChartLabels3\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor3\">\n                </canvas>\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'b'\"></div>\n            </div>\n        </div>\n    </div>\n</section>\n<div class=\"loading\" *ngIf=\"isLoading\">\n    <p>Загрузка</p>\n</div>\n<div class=\"btns\" *ngIf=\"isImageLoaded\">\n    <button (click)=\"nextStep()\" [disabled]=\"!(isChoosen && isImageLoaded)\" [ngClass]=\"{btn: true, btn_enabled: (isChoosen && isImageLoaded), btn_disabled: !(isChoosen && isImageLoaded)}\">Далее</button>\n</div>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { MethOneDataService } from 'src/app/services/meth-one-data.service';\n\n@Component({\n  selector: 'app-meth-one-step2',\n  templateUrl: './meth-one-step2.component.html',\n  styleUrls: ['./meth-one-step2.component.css']\n})\nexport class MethOneStep2Component {\n\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  num: string = '1'\n\n  constructor(private methOneDataService: MethOneDataService) { }\n\n  generateNewImage(newChannel, channel) {\n    let newPixel\n    for (let i = 0; i < newChannel.length; i++) {\n      switch(channel) {\n        case 'r':\n          newPixel = {r: newChannel[i], g: this.methOneDataService.arrChannelG[i], b: this.methOneDataService.arrChannelB[i], a: this.methOneDataService.arrChannelA[i]}\n        break\n        case 'g':\n          newPixel = {r: this.methOneDataService.arrChannelR[i], g: newChannel[i], b: this.methOneDataService.arrChannelB[i], a: this.methOneDataService.arrChannelA[i]}\n        break\n        case 'b':\n          newPixel = {r: this.methOneDataService.arrChannelR[i], g: this.methOneDataService.arrChannelG[i], b: newChannel[i], a: this.methOneDataService.arrChannelA[i]}\n        break\n      }\n      this.methOneDataService.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n  }\n\n  randomUniqInt(min, max, arr) {\n    let newRandomInt = min + Math.floor((max - min) * Math.random())\n    if (!arr.includes(newRandomInt)) return newRandomInt\n    else this.randomUniqInt(min, max, arr)\n  }\n\n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  nextStep() {\n    let newCodeNumArr\n    let randomColorValues = []\n    switch(this.methOneDataService.choosenChannel) {\n      case 'r':\n        newCodeNumArr = this.methOneDataService.arrChannelR\n        break\n      case 'g':\n        newCodeNumArr = this.methOneDataService.arrChannelG\n        break\n      case 'b':\n        newCodeNumArr = this.methOneDataService.arrChannelB\n        break\n    }\n    for (let i = 0; i < +this.num; i++) {\n      randomColorValues.push(this.randomUniqInt(0, 255, randomColorValues))\n    }\n    randomColorValues.forEach(n => {\n      newCodeNumArr[n] += 1 \n    })\n    this.generateNewImage(newCodeNumArr, this.methOneDataService.choosenChannel)\n    this.methOneDataService.newChoosenChannel = newCodeNumArr\n    this.onNext.emit(null)\n  }\n}\n","<h2 class=\"choose_channelH content\">Выберите количество уровней светлоты для обработки</h2>\n<div class=\"codeInput\">\n    <input type=\"range\" min=\"1\" max=\"5\" [(ngModel)]=\"num\">\n    <div class=\"num\">\n        {{num}}\n    </div>\n</div>\n<div class=\"btns\">\n    <button (click)=\"lastStep()\" class=\"btn btn_enabled\" style=\"margin-right: 2px;\">Назад</button>\n    <button (click)=\"nextStep()\" class=\"btn btn_enabled\">Далее</button>\n</div>\n","import { Component, OnInit, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { MethOneDataService } from 'src/app/services/meth-one-data.service';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, Color } from 'ng2-charts';\nimport { ChartsService } from 'src/app/services/charts.service';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-meth-one-step3',\n  templateUrl: './meth-one-step3.component.html',\n  styleUrls: ['./meth-one-step3.component.css']\n})\nexport class MethOneStep3Component implements OnInit {\n\n  @ViewChild('m1s3c1', {static: true}) canvas: ElementRef\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n\n  imgUrl\n  imgDivHeight = 600\n  imgDivWidth = 0\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  barChartType: ChartType = 'bar'\n  barChartLegend = true\n  barChartPlugins = []\n\n  barChartLabels1: Label[] = []\n  barChartColor1: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'red',\n  }]\n  barChartData1: ChartDataSets[] = [\n    { data: [], label: 'R Channel' }\n  ]\n\n\n  barChartLabels2: Label[] = []\n  barChartColor2: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'green',\n  }]\n  barChartData2: ChartDataSets[] = [\n    { data: [], label: 'G Channel' }\n  ]\n\n  barChartLabels3: Label[] = []\n  barChartColor3: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'blue',\n  }]\n  barChartData3: ChartDataSets[] = [\n    { data: [], label: 'B Channel' }\n  ]\n\n\n  constructor(private api: ApiService, private methOneDataService: MethOneDataService, private chartsService: ChartsService) { }\n\n  ngOnInit() {\n    this.canvas.nativeElement.width = this.methOneDataService.picParams.width;\n    this.canvas.nativeElement.height = this.methOneDataService.picParams.height;\n    const ctx = this.canvas.nativeElement.getContext('2d');\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      imageData.data[i + 0] = this.methOneDataService.newImageArray[i + 0]\n      imageData.data[i + 1] = this.methOneDataService.newImageArray[i + 1]\n      imageData.data[i + 2] = this.methOneDataService.newImageArray[i + 2]\n      imageData.data[i + 3] = this.methOneDataService.newImageArray[i + 3]\n    }\n    ctx.putImageData(imageData, 0, 0)\n    this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n    this.imgDivWidth = this.canvas.nativeElement.width * (this.imgDivHeight / this.canvas.nativeElement.height)\n\n    const size = this.canvas.nativeElement.width + 'x' + this.canvas.nativeElement.height\n    const img = new File([this.api.dataURItoBlob(this.imgUrl)], 'm1result.png');\n    this.api.addToDb('1', img, size)\n      .subscribe(res => {\n        console.log(res)\n      })\n\n    this.chartsService.renderChartsRGB(1, imageData.data)\n    this.renderCharts(this.methOneDataService.amountChannelR, this.methOneDataService.amountChannelG, this.methOneDataService.amountChannelB)\n  }\n\n  renderCharts(typeR, typeG, typeB) {\n    let chartColumnNames = []\n    for (let i = 0; i <= 255; i++) {\n      chartColumnNames[i] = i\n    }\n\n    this.barChartLabels1 = chartColumnNames\n    this.barChartData1 = [\n      { data: typeR, label: 'R Channel' }\n    ]\n\n    this.barChartLabels2 = chartColumnNames\n    this.barChartData2 = [\n      { data: typeG, label: 'G Channel' }\n    ]\n\n    this.barChartLabels3 = chartColumnNames\n    this.barChartData3 = [\n      { data: typeB, label: 'B Channel' }\n    ]\n  }\n  \n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  saveImage() {\n    const link = document.createElement('a')\n    link.download = 'filename.png'\n    link.href = this.canvas.nativeElement.toDataURL()\n    link.click()\n  }\n}\n","<canvas #m1s3c1 style=\"display: none\"></canvas>\n<div class=\"canvasImage\">\n    <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n</div>\n<div class=\"channels\">\n    <div class=\"channels__grid_rgb\">\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData1\"\n            [labels]=\"barChartLabels1\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor1\">\n            </canvas>\n        </div>\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData2\"\n            [labels]=\"barChartLabels2\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor2\">\n            </canvas>\n        </div>\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData3\"\n            [labels]=\"barChartLabels3\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor3\">\n            </canvas>\n        </div>\n    </div>\n</div>\n<div class=\"btns\">\n    <button class=\"btn btn_enabled\" (click)=\"lastStep()\" style=\"margin-right: 2px;\">Назад</button>\n    <button class=\"btn btn_enabled\" (click)=\"saveImage()\">Сохранить</button>\n</div>\n","<h1 class=\"content method\">{{method}}</h1>\n<h2 class=\"content step\">{{'Шаг ' + step}}</h2>\n<div [ngSwitch]=\"step\">\n    <app-meth-three-step1 *ngSwitchCase=\"1\" (onNext)=\"nextStep()\"></app-meth-three-step1>\n    <app-meth-three-step2 *ngSwitchCase=\"2\" (onNext)=\"nextStep()\" (onLast)=\"lastStep()\"></app-meth-three-step2>\n    <app-meth-three-step3 *ngSwitchCase=\"3\" (onLast)=\"lastStep()\"></app-meth-three-step3>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meth-three-page',\n  templateUrl: './meth-three-page.component.html',\n  styleUrls: ['./meth-three-page.component.css']\n})\nexport class MethThreePageComponent implements OnInit {\n  \n  method = 'Введение 2D штрихового кода (QR) в цифровое изображение'\n  step: number = 1\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  lastStep() {\n    this.step--;\n  }\n  nextStep() {\n    this.step++;\n  }\n}\n","import { Component, OnInit, ViewChild, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { MethThreeDataService } from 'src/app/services/meth-three-data.service';\n\n@Component({\n  selector: 'app-meth-three-step1',\n  templateUrl: './meth-three-step1.component.html',\n  styleUrls: ['./meth-three-step1.component.css']\n})\nexport class MethThreeStep1Component implements OnInit {\n\n  @ViewChild('m3s1c1') canvas: ElementRef\n  @ViewChild('m3s1c2') canvasChannels: ElementRef\n  @ViewChild('m3s1c3') canvasCode: ElementRef\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  isChoosen: boolean = false\n  isLoading: boolean = false\n  isImageLoaded: boolean = false\n  reader = new FileReader()\n  pic = new Image()\n  code = new Image()\n  imgDivHeight = 300\n  imgDivWidth = 0\n  imgUrl = ''\n  codeUrl = ''\n  choosenChannel = ''\n\n  channelUrlR = ''\n  channelUrlG = ''\n  channelUrlB = ''\n \n  constructor(private methThreeDataService: MethThreeDataService) { }\n\n  ngOnInit() {\n\n  }\n\n  addPic(files) {\n    this.isImageLoaded = false\n    this.isLoading = true\n    this.isChoosen = false\n\t  this.reader.onload = () => {\n      let ctx = this.canvas.nativeElement.getContext('2d')\n      this.pic.onload = () => {\n        this.choosenChannel = ''\n        this.methThreeDataService.fullZeroing()\n        this.methThreeDataService.picParams = {width: this.pic.width, height: this.pic.height}\n        this.canvas.nativeElement.width = this.pic.width\n        this.canvas.nativeElement.height = this.pic.height\n        ctx.drawImage(this.pic, 0, 0)\n        this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n        this.imgDivWidth = this.pic.width * (this.imgDivHeight / this.pic.height)\n        this.devideOnChannels(ctx)\n        this.isImageLoaded = true\n        this.isLoading = false\n      }\n      this.pic.src = this.reader.result as string\n    }\n    this.reader.readAsDataURL(files[0])\n  }\n\n  addCode(files) {\n\t  this.reader.onload = () => {\n      let ctx = this.canvasCode.nativeElement.getContext('2d')\n      this.code.onload = () => {\n        this.choosenChannel = ''\n        this.methThreeDataService.codeZeroing()\n        this.methThreeDataService.codeParams = {width: this.code.width, height: this.code.height}\n        this.canvasCode.nativeElement.width = this.code.width\n        this.canvasCode.nativeElement.height = this.code.height\n        ctx.drawImage(this.code, 0, 0)\n        this.methThreeDataService.codeData = ctx.getImageData(0, 0, this.canvasCode.nativeElement.width, this.canvasCode.nativeElement.height)\n        this.codeUrl = this.canvasCode.nativeElement.toDataURL('image/jpeg')\n        this.imgDivWidth = this.code.width * (this.imgDivHeight / this.code.height)\n      }\n      this.code.src = this.reader.result as string\n    }\n    this.reader.readAsDataURL(files[0])\n  }\n\n  devideOnChannels(ctx) {\n    let pixelData = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    let ctxChannels = this.canvasChannels.nativeElement.getContext('2d')\n    this.canvasChannels.nativeElement.width = this.canvas.nativeElement.width;\n    this.canvasChannels.nativeElement.height = this.canvas.nativeElement.height;\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      this.methThreeDataService.arrChannelR.push(pixelData.data[i + 0])\n      this.methThreeDataService.arrChannelG.push(pixelData.data[i + 1])\n      this.methThreeDataService.arrChannelB.push(pixelData.data[i + 2])\n      this.methThreeDataService.arrChannelA.push(pixelData.data[i + 3])\n    }\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      this.methThreeDataService.channelPixArrR.push(pixelData.data[i], 0 , 0, 0)\n      this.methThreeDataService.channelPixArrG.push(0, pixelData.data[i + 1] , 0, 0)\n      this.methThreeDataService.channelPixArrB.push(0, 0, pixelData.data[i + 2], 0)\n      this.methThreeDataService.channelPixArrA.push(0, 0 , 0, pixelData.data[i + 3])\n    }\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      pixelData.data[i + 0] = this.methThreeDataService.channelPixArrR[i + 0]\n      pixelData.data[i + 1] = this.methThreeDataService.channelPixArrR[i + 1]\n      pixelData.data[i + 2] = this.methThreeDataService.channelPixArrR[i + 2]\n    }\n    ctxChannels.putImageData(pixelData, 0, 0)\n    this.channelUrlR = this.canvasChannels.nativeElement.toDataURL('image/jpeg')\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      pixelData.data[i + 0] = this.methThreeDataService.channelPixArrG[i + 0]\n      pixelData.data[i + 1] = this.methThreeDataService.channelPixArrG[i + 1]\n      pixelData.data[i + 2] = this.methThreeDataService.channelPixArrG[i + 2]\n    }\n    ctxChannels.putImageData(pixelData, 0, 0)\n    this.channelUrlG = this.canvasChannels.nativeElement.toDataURL('image/jpeg')\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      pixelData.data[i + 0] = this.methThreeDataService.channelPixArrB[i + 0]\n      pixelData.data[i + 1] = this.methThreeDataService.channelPixArrB[i + 1]\n      pixelData.data[i + 2] = this.methThreeDataService.channelPixArrB[i + 2]\n    }\n    ctxChannels.putImageData(pixelData, 0, 0)\n    this.channelUrlB = this.canvasChannels.nativeElement.toDataURL('image/jpeg')\n  }\n\n  chooseChannel(channel) {\n    this.isChoosen = true\n    this.choosenChannel = channel\n    this.methThreeDataService.choosenChannel = channel\n  }\n\n  nextStep() {\n    this.onNext.emit(null)\n  }\n}\n","<div class=\"choose_file\">\n    <label for=\"image_upload\" class=\"upload_label\">Выберите изображение для загрузки (PNG, JPG)</label>\n    <input type=\"file\" id=\"image_upload\" (change)=\"addPic($event.target.files)\">\n</div>\n<div class=\"choose_file\">\n    <label for=\"code_upload\" class=\"upload_label\">Выберите код для загрузки (PNG, JPG)</label>\n    <input type=\"file\" id=\"code_upload\" (change)=\"addCode($event.target.files)\">\n</div>\n<section [ngStyle]=\"{display: isImageLoaded ? 'block' : 'none'}\">\n    <canvas style=\"display: none\" #m3s1c1></canvas>\n    <canvas style=\"display: none\" #m3s1c2></canvas>\n    <canvas style=\"display: none\" #m3s1c3></canvas>\n    <div class=\"canvasImage\">\n        <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n        <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ codeUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n    </div>\n    <h2 class=\"choose_channelH content\">Выберите один из каналов RGB</h2>\n    <div class=\"channels content\">\n        <div class=\"channels__grid_rgb\">\n            <div class=\"imageChannels\" [ngStyle]=\"{backgroundImage: 'url('+ channelUrlR +')'}\" (click)=\"chooseChannel('r')\">\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'r'\"></div>\n            </div>\n            <div class=\"imageChannels\" [ngStyle]=\"{backgroundImage: 'url('+ channelUrlG +')'}\" (click)=\"chooseChannel('g')\">\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'g'\"></div>\n            </div>\n            <div class=\"imageChannels\" [ngStyle]=\"{backgroundImage: 'url('+ channelUrlB +')'}\" (click)=\"chooseChannel('b')\">\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'b'\"></div>\n            </div>\n        </div>\n    </div>\n</section>\n<div class=\"loading\" *ngIf=\"isLoading\">\n    <p>Загрузка</p>\n</div>\n<div class=\"btns\" *ngIf=\"isImageLoaded\">\n    <button (click)=\"nextStep()\" [disabled]=\"!(isChoosen && isImageLoaded)\" [ngClass]=\"{btn: true, btn_enabled: (isChoosen && isImageLoaded), btn_disabled: !(isChoosen && isImageLoaded)}\">Далее</button>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { MethThreeDataService } from 'src/app/services/meth-three-data.service';\nimport { fromEvent, Observable } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-meth-three-step2',\n  templateUrl: './meth-three-step2.component.html',\n  styleUrls: ['./meth-three-step2.component.css']\n})\nexport class MethThreeStep2Component implements OnInit {\n\n  isChoosen: boolean = false\n  pixelArrObj\n  defaultPixelArr\n  codePosition\n  @ViewChild('m3s2c1', {static: true}) canvas: ElementRef\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  constructor(private methThreeDataService: MethThreeDataService) { }\n\n  ngOnInit() {\n    let channelPixArr = []\n    this.canvas.nativeElement.width = this.methThreeDataService.picParams.width\n    this.canvas.nativeElement.height = this.methThreeDataService.picParams.height\n    let ctx = this.canvas.nativeElement.getContext('2d')\n    let pixelData = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    switch(this.methThreeDataService.choosenChannel) {\n      case 'r': \n        channelPixArr = this.methThreeDataService.channelPixArrR\n      break\n      case 'g': \n        channelPixArr = this.methThreeDataService.channelPixArrG\n      break\n      case 'b': \n        channelPixArr = this.methThreeDataService.channelPixArrB\n      break\n    }\n    for (let i = 0; i < pixelData.data.length; i += 4) {\n      pixelData.data[i + 0] = channelPixArr[i + 0]\n      pixelData.data[i + 1] = channelPixArr[i + 1]\n      pixelData.data[i + 2] = channelPixArr[i + 2]\n      pixelData.data[i + 3] = 255\n    }\n    ctx.putImageData(pixelData, 0 , 0)\n    this.pixelArrObj = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    this.defaultPixelArr = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    let mouswMove$: Observable<MouseEvent> = fromEvent(this.canvas.nativeElement, 'mousemove')\n    let mouseout$: Observable<MouseEvent> = fromEvent(this.canvas.nativeElement, 'mouseout')\n    mouswMove$\n    .pipe(\n      map(e => ({x: e.offsetX, y: e.offsetY}))\n    ).subscribe((p) => {\n      this.showCode(p, ctx)\n    })\n  }\n\n  showCode(position, context) {\n    context.putImageData(this.pixelArrObj, 0, 0)\n    context.strokeStyle = 'gold';\n    context.lineWidth = 10;\n    context.strokeRect(position.x, position.y, this.methThreeDataService.codeParams.width, this.methThreeDataService.codeParams.height)\n  }\n\n  renderCode(e) {\n    this.codePosition = {x: e.offsetX, y: e.offsetY}\n    let ctx = this.canvas.nativeElement.getContext('2d')\n    ctx.putImageData(this.defaultPixelArr, 0, 0)\n    ctx.putImageData(this.methThreeDataService.codeData, e.offsetX, e.offsetY)\n    this.pixelArrObj = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    this.isChoosen = true\n  }\n\n  generateNewImage(newChannel, channel) {\n    let newPixel\n    for (let i = 0; i < newChannel.length; i++) {\n      switch(channel) {\n        case 'r':\n          newPixel = {r: newChannel[i], g: this.methThreeDataService.arrChannelG[i], b: this.methThreeDataService.arrChannelB[i], a: this.methThreeDataService.arrChannelA[i]}\n        break\n        case 'g':\n          newPixel = {r: this.methThreeDataService.arrChannelR[i], g: newChannel[i], b: this.methThreeDataService.arrChannelB[i], a: this.methThreeDataService.arrChannelA[i]}\n        break\n        case 'b':\n          newPixel = {r: this.methThreeDataService.arrChannelR[i], g: this.methThreeDataService.arrChannelG[i], b: newChannel[i], a: this.methThreeDataService.arrChannelA[i]}\n        break\n      }\n      this.methThreeDataService.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n  }\n\n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  nextStep() {\n    let newCodeNumArr\n    let codeData = this.methThreeDataService.codeData.data\n    let startX = this.codePosition.x\n    let startY = this.codePosition.y\n    let codeHeight = this.methThreeDataService.codeParams.height\n    let codeWidth = this.methThreeDataService.codeParams.width\n    switch(this.methThreeDataService.choosenChannel) {\n      case 'r':\n        newCodeNumArr = this.methThreeDataService.arrChannelR\n        break\n      case 'g':\n        newCodeNumArr = this.methThreeDataService.arrChannelG\n        break\n      case 'b':\n        newCodeNumArr = this.methThreeDataService.arrChannelB\n        break\n    }\n    let c = 0\n    for (let y = startY; y < (startY + codeHeight); y++) {\n      for (let x = startX; x < (startX + codeWidth); x++) {\n        if (codeData[c] == 0 && codeData[c + 1] == 0 && codeData[c + 2] == 0) {\n          newCodeNumArr[this.methThreeDataService.picParams.width * y + x] = 255\n        }\n        // else {\n        //   newCodeNumArr[this.methThreeDataService.picParams.width * y + x] = 0\n        // }\n        c += 4\n      }\n    }\n    this.generateNewImage(newCodeNumArr, this.methThreeDataService.choosenChannel)\n    this.methThreeDataService.newChoosenChannel = newCodeNumArr\n    this.onNext.emit(null)\n  }\n}\n","<div class=\"codeCanvas\">\n    <canvas #m3s2c1 (click)=\"renderCode($event)\"></canvas>\n</div>\n<div class=\"btns\">\n    <button (click)=\"lastStep()\" class=\"btn btn_enabled\" style=\"margin-right: 2px;\">Назад</button>\n    <button (click)=\"nextStep()\" [disabled]=\"!isChoosen\" [ngClass]=\"{btn: true, btn_enabled: isChoosen, btn_disabled: !isChoosen}\">Далее</button>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { ApiService } from 'src/app/services/api.service';\nimport { MethThreeDataService } from 'src/app/services/meth-three-data.service';\n\n@Component({\n  selector: 'app-meth-three-step3',\n  templateUrl: './meth-three-step3.component.html',\n  styleUrls: ['./meth-three-step3.component.css']\n})\nexport class MethThreeStep3Component implements OnInit {\n  \n  @ViewChild('m3s3c1', {static: true}) canvas: ElementRef\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n\n  imgUrl\n  imgDivHeight = 600\n  imgDivWidth = 0\n\n  constructor(private api: ApiService, private methThreeDataService: MethThreeDataService) { }\n\n  ngOnInit() {\n    this.canvas.nativeElement.width = this.methThreeDataService.picParams.width;\n    this.canvas.nativeElement.height = this.methThreeDataService.picParams.height;\n    const ctx = this.canvas.nativeElement.getContext('2d');\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      imageData.data[i + 0] = this.methThreeDataService.newImageArray[i + 0]\n      imageData.data[i + 1] = this.methThreeDataService.newImageArray[i + 1]\n      imageData.data[i + 2] = this.methThreeDataService.newImageArray[i + 2]\n      imageData.data[i + 3] = this.methThreeDataService.newImageArray[i + 3]\n    }\n    ctx.putImageData(imageData, 0, 0)\n    this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n    this.imgDivWidth = this.canvas.nativeElement.width * (this.imgDivHeight / this.canvas.nativeElement.height)\n    \n    const size = this.canvas.nativeElement.width + 'x' + this.canvas.nativeElement.height\n    const img = new File([this.api.dataURItoBlob(this.imgUrl)], 'm3result.png');\n    this.api.addToDb('3', img, size)\n      .subscribe(res => {\n        console.log(res)\n      })\n  }\n  \n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  saveImage() {\n    const link = document.createElement('a')\n    link.download = 'filename.png'\n    link.href = this.canvas.nativeElement.toDataURL()\n    link.click()\n  }\n}\n","<canvas #m3s3c1 style=\"display: none\"></canvas>\n<div class=\"canvasImage\">\n    <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n</div>\n<div class=\"btns\">\n    <button class=\"btn btn_enabled\" (click)=\"lastStep()\" style=\"margin-right: 2px;\">Назад</button>\n    <button class=\"btn btn_enabled\" (click)=\"saveImage()\">Сохранить</button>\n</div>\n","<h1 class=\"content method\">{{method}}</h1>\n<h2 class=\"content step\">{{'Шаг ' + step}}</h2>\n<div [ngSwitch]=\"step\">\n    <app-meth-two-step1 *ngSwitchCase=\"1\" (onNext)=\"nextStep()\"></app-meth-two-step1>\n    <app-meth-two-step2 *ngSwitchCase=\"2\" (onNext)=\"nextStep()\" (onLast)=\"lastStep()\"></app-meth-two-step2>\n    <app-meth-two-step3 *ngSwitchCase=\"3\" (onLast)=\"lastStep()\"></app-meth-two-step3>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meth-two-page',\n  templateUrl: './meth-two-page.component.html',\n  styleUrls: ['./meth-two-page.component.css']\n})\nexport class MethTwoPageComponent implements OnInit {\n\n  method = 'Введение штрихового кода в тоновый диапазон канала RGB'\n  step: number = 1\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  lastStep() {\n    this.step--;\n  }\n  nextStep() {\n    this.step++;\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { RgbCmykService } from 'src/app/services/rgb-smyk.service';\n\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, Color } from 'ng2-charts';\nimport { MethTwoDataService } from 'src/app/services/meth-two-data.service';\nimport { ChartsService } from 'src/app/services/charts.service';\n\n@Component({\n  selector: 'app-meth-two-step1',\n  templateUrl: './meth-two-step1.component.html',\n  styleUrls: ['./meth-two-step1.component.css']\n})\nexport class MethTwoStep1Component {\n\n  @ViewChild('m2s1c1') canvas: ElementRef\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  isChoosen: boolean = false\n  isLoading: boolean = false\n  isImageLoaded: boolean = false\n  reader = new FileReader()\n  pic = new Image()\n  imgDivHeight = 300\n  imgDivWidth = 0\n  imgUrl = ''\n  choosenChannel = ''\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  barChartType: ChartType = 'bar'\n  barChartLegend = true\n  barChartPlugins = []\n\n  barChartLabels1: Label[] = []\n  barChartColor1: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'red',\n  }]\n  barChartData1: ChartDataSets[] = [\n    { data: [], label: 'R Channel' }\n  ]\n\n\n  barChartLabels2: Label[] = []\n  barChartColor2: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'green',\n  }]\n  barChartData2: ChartDataSets[] = [\n    { data: [], label: 'G Channel' }\n  ]\n\n  barChartLabels3: Label[] = []\n  barChartColor3: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'blue',\n  }]\n  barChartData3: ChartDataSets[] = [\n    { data: [], label: 'B Channel' }\n  ]\n\n\n  constructor(private methTwoDataService: MethTwoDataService, private chartsService: ChartsService) { }\n\n  addPic(files) {\n    this.isImageLoaded = false\n    this.isLoading = true\n    this.isChoosen = false\n\t  this.reader.onload = () => {\n      let ctx = this.canvas.nativeElement.getContext('2d')\n      this.pic.onload = () => {\n        this.choosenChannel = ''\n        this.methTwoDataService.fullZeroing()\n        this.methTwoDataService.picParams = {width: this.pic.width, height: this.pic.height}\n        this.canvas.nativeElement.width = this.pic.width\n        this.canvas.nativeElement.height = this.pic.height\n        ctx.drawImage(this.pic, 0, 0)\n        this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n        this.imgDivWidth = this.pic.width * (this.imgDivHeight / this.pic.height)\n        this.devideOnChannels(ctx)\n        this.isImageLoaded = true\n        this.isLoading = false\n      }\n      this.pic.src = this.reader.result as string\n    }\n    this.reader.readAsDataURL(files[0])\n  }\n\n  devideOnChannels(ctx) {\n    var pixelData = ctx.getImageData(0, 0, this.canvas.nativeElement.width, this.canvas.nativeElement.height)\n    this.chartsService.renderChartsRGB(2, pixelData.data)\n    this.renderCharts(this.methTwoDataService.amountChannelR, this.methTwoDataService.amountChannelG, this.methTwoDataService.amountChannelB)\n  }\n\n  renderCharts(typeR, typeG, typeB) {\n    let chartColumnNames = []\n    for (let i = 0; i <= 255; i++) {\n      chartColumnNames[i] = i\n    }\n\n    this.barChartLabels1 = chartColumnNames\n    this.barChartData1 = [\n      { data: typeR, label: 'R Channel' }\n    ]\n\n    this.barChartLabels2 = chartColumnNames\n    this.barChartData2 = [\n      { data: typeG, label: 'G Channel' }\n    ]\n\n    this.barChartLabels3 = chartColumnNames\n    this.barChartData3 = [\n      { data: typeB, label: 'B Channel' }\n    ]\n  }\n\n  chooseChannel(channel) {\n    this.isChoosen = true\n    this.choosenChannel = channel\n    this.methTwoDataService.choosenChannel = channel\n  }\n\n  nextStep() {\n    this.onNext.emit(null)\n  }\n  \n}\n","<div class=\"choose_file\">\n    <label for=\"image_upload\" class=\"upload_label\">Выберите изображение для загрузки (PNG, JPG)</label>\n    <input type=\"file\" id=\"image_upload\" (change)=\"addPic($event.target.files)\">\n</div>\n<section [ngStyle]=\"{display: isImageLoaded ? 'block' : 'none'}\">\n    <canvas style=\"display: none\" #m2s1c1></canvas>\n    <div class=\"canvasImage\">\n        <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n    </div>\n    <h2 class=\"choose_channelH content\">Выберите один из каналов RGB</h2>\n    <div class=\"channels\">\n        <div class=\"channels__grid_rgb\">\n            <div class=\"canvas_gholder\" (click)=\"chooseChannel('r')\">\n                <canvas baseChart \n                [datasets]=\"barChartData1\"\n                [labels]=\"barChartLabels1\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor1\">\n                </canvas>\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'r'\"></div>\n            </div>\n            <div class=\"canvas_gholder\" (click)=\"chooseChannel('g')\">\n                <canvas baseChart \n                [datasets]=\"barChartData2\"\n                [labels]=\"barChartLabels2\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor2\">\n                </canvas>\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'g'\"></div>\n            </div>\n            <div class=\"canvas_gholder\" (click)=\"chooseChannel('b')\">\n                <canvas baseChart \n                [datasets]=\"barChartData3\"\n                [labels]=\"barChartLabels3\"\n                [options]=\"barChartOptions\"\n                [plugins]=\"barChartPlugins\"\n                [legend]=\"barChartLegend\"\n                [chartType]=\"barChartType\"\n                [colors]=\"barChartColor3\">\n                </canvas>\n                <div class=\"galka\" *ngIf=\"choosenChannel == 'b'\"></div>\n            </div>\n        </div>\n    </div>\n</section>\n<div class=\"loading\" *ngIf=\"isLoading\">\n    <p>Загрузка</p>\n</div>\n<div class=\"btns\" *ngIf=\"isImageLoaded\">\n    <button (click)=\"nextStep()\" [disabled]=\"!(isChoosen && isImageLoaded)\" [ngClass]=\"{btn: true, btn_enabled: (isChoosen && isImageLoaded), btn_disabled: !(isChoosen && isImageLoaded)}\">Далее</button>\n</div>\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { MethTwoDataService } from 'src/app/services/meth-two-data.service';\n\n@Component({\n  selector: 'app-meth-two-step2',\n  templateUrl: './meth-two-step2.component.html',\n  styleUrls: ['./meth-two-step2.component.css']\n})\nexport class MethTwoStep2Component implements OnInit {\n\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n  @Output() onNext: EventEmitter<any> = new EventEmitter()\n\n  codeNum: string = ''\n\n  constructor(private methTwoDataService: MethTwoDataService) { }\n\n  ngOnInit() {\n  }\n\n  generateNewImage(newChannel, channel) {\n    let newPixel\n    for (let i = 0; i < newChannel.length; i++) {\n      switch(channel) {\n        case 'r':\n          newPixel = {r: newChannel[i], g: this.methTwoDataService.arrChannelG[i], b: this.methTwoDataService.arrChannelB[i], a: this.methTwoDataService.arrChannelA[i]}\n        break\n        case 'g':\n          newPixel = {r: this.methTwoDataService.arrChannelR[i], g: newChannel[i], b: this.methTwoDataService.arrChannelB[i], a: this.methTwoDataService.arrChannelA[i]}\n        break\n        case 'b':\n          newPixel = {r: this.methTwoDataService.arrChannelR[i], g: this.methTwoDataService.arrChannelG[i], b: newChannel[i], a: this.methTwoDataService.arrChannelA[i]}\n        break\n      }\n      this.methTwoDataService.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, newPixel.a)\n    }\n  }\n\n  lastStep() {\n    this.onLast.emit(null)\n  }\n  \n  nextStep() {\n    let newCodeNumArr\n    switch(this.methTwoDataService.choosenChannel) {\n      case 'r':\n        newCodeNumArr = this.methTwoDataService.arrChannelR\n        break\n      case 'g':\n        newCodeNumArr = this.methTwoDataService.arrChannelG\n        break\n      case 'b':\n        newCodeNumArr = this.methTwoDataService.arrChannelB\n        break\n    }\n    this.codeNum.split('').forEach((i, idx) => {\n      if (+i == 0) {\n        newCodeNumArr = newCodeNumArr.map(n => {\n          if (n == idx) {\n            return n += 1\n          }\n          else {\n            return n\n          }\n        })\n      }\n    })\n    this.generateNewImage(newCodeNumArr, this.methTwoDataService.choosenChannel)\n    this.methTwoDataService.newChoosenChannel = newCodeNumArr\n    this.onNext.emit(null)\n  }\n}\n","<h2 class=\"choose_channelH content\">Введите код из нулей и единиц</h2>\n<div class=\"codeInput\">\n    <input type=\"text\" [(ngModel)]=\"codeNum\">\n</div>\n<div class=\"btns\">\n    <button (click)=\"lastStep()\" class=\"btn btn_enabled\" style=\"margin-right: 2px;\">Назад</button>\n    <button (click)=\"nextStep()\" [disabled]=\"codeNum.length!=128\" [ngClass]=\"{btn: true, btn_enabled: codeNum.length == 128, btn_disabled: codeNum.length != 128}\">Далее</button>\n</div>\n","import { Component, OnInit, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { MethTwoDataService } from 'src/app/services/meth-two-data.service';\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\nimport { Label, Color } from 'ng2-charts';\nimport { ChartsService } from 'src/app/services/charts.service';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-meth-two-step3',\n  templateUrl: './meth-two-step3.component.html',\n  styleUrls: ['./meth-two-step3.component.css']\n})\nexport class MethTwoStep3Component implements OnInit {\n\n  @ViewChild('m2s3c1', {static: true}) canvas: ElementRef\n  @Output() onLast: EventEmitter<any> = new EventEmitter()\n\n  imgUrl\n  imgDivHeight = 600\n  imgDivWidth = 0\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n  barChartType: ChartType = 'bar'\n  barChartLegend = true\n  barChartPlugins = []\n\n  barChartLabels1: Label[] = []\n  barChartColor1: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'red',\n  }]\n  barChartData1: ChartDataSets[] = [\n    { data: [], label: 'R Channel' }\n  ]\n\n\n  barChartLabels2: Label[] = []\n  barChartColor2: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'green',\n  }]\n  barChartData2: ChartDataSets[] = [\n    { data: [], label: 'G Channel' }\n  ]\n\n  barChartLabels3: Label[] = []\n  barChartColor3: Color[] = [{\n    borderColor: 'black',\n    backgroundColor: 'blue',\n  }]\n  barChartData3: ChartDataSets[] = [\n    { data: [], label: 'B Channel' }\n  ]\n\n  constructor(private api: ApiService, private methTwoDataService: MethTwoDataService, private chartsService: ChartsService) { }\n\n  ngOnInit() {\n    let meth = 2\n    this.canvas.nativeElement.width = this.methTwoDataService.picParams.width;\n    this.canvas.nativeElement.height = this.methTwoDataService.picParams.height;\n    const ctx = this.canvas.nativeElement.getContext('2d');\n    const imageData = ctx.createImageData(this.canvas.nativeElement.width, this.canvas.nativeElement.height);\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      imageData.data[i + 0] = this.methTwoDataService.newImageArray[i + 0]\n      imageData.data[i + 1] = this.methTwoDataService.newImageArray[i + 1]\n      imageData.data[i + 2] = this.methTwoDataService.newImageArray[i + 2]\n      imageData.data[i + 3] = this.methTwoDataService.newImageArray[i + 3]\n    }\n    ctx.putImageData(imageData, 0, 0)\n    this.imgUrl = this.canvas.nativeElement.toDataURL('image/jpeg')\n    this.imgDivWidth = this.canvas.nativeElement.width * (this.imgDivHeight / this.canvas.nativeElement.height)\n   \n    const size = this.canvas.nativeElement.width + 'x' + this.canvas.nativeElement.height\n    const img = new File([this.api.dataURItoBlob(this.imgUrl)], 'm2result.png');\n    this.api.addToDb('2', img, size)\n      .subscribe(res => {\n        console.log(res)\n      })\n   \n    this.chartsService.renderChartsRGB(meth, imageData.data)\n    this.renderCharts(this.methTwoDataService.amountChannelR, this.methTwoDataService.amountChannelG, this.methTwoDataService.amountChannelB)\n  }\n\n  renderCharts(typeR, typeG, typeB) {\n    let chartColumnNames = []\n    for (let i = 0; i <= 255; i++) {\n      chartColumnNames[i] = i\n    }\n\n    this.barChartLabels1 = chartColumnNames\n    this.barChartData1 = [\n      { data: typeR, label: 'R Channel' }\n    ]\n\n    this.barChartLabels2 = chartColumnNames\n    this.barChartData2 = [\n      { data: typeG, label: 'G Channel' }\n    ]\n\n    this.barChartLabels3 = chartColumnNames\n    this.barChartData3 = [\n      { data: typeB, label: 'B Channel' }\n    ]\n  }\n\n  lastStep() {\n    this.onLast.emit(null)\n  }\n\n  saveImage() {\n    const link = document.createElement('a')\n    link.download = 'filename.png'\n    link.href = this.canvas.nativeElement.toDataURL()\n    link.click()\n  }\n}\n","<canvas #m2s3c1 style=\"display: none\"></canvas>\n<div class=\"canvasImage\">\n    <div class=\"canvasImage__img\" [ngStyle]=\"{backgroundImage: 'url('+ imgUrl +')', width: imgDivWidth + 'px', height: imgDivHeight + 'px'}\"></div>\n</div>\n<div class=\"channels\">\n    <div class=\"channels__grid_rgb\">\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData1\"\n            [labels]=\"barChartLabels1\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor1\">\n            </canvas>\n        </div>\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData2\"\n            [labels]=\"barChartLabels2\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor2\">\n            </canvas>\n        </div>\n        <div class=\"canvas_gholder\">\n            <canvas baseChart \n            [datasets]=\"barChartData3\"\n            [labels]=\"barChartLabels3\"\n            [options]=\"barChartOptions\"\n            [plugins]=\"barChartPlugins\"\n            [legend]=\"barChartLegend\"\n            [chartType]=\"barChartType\"\n            [colors]=\"barChartColor3\">\n            </canvas>\n        </div>\n    </div>\n</div>\n<div class=\"btns\">\n    <button class=\"btn btn_enabled\" (click)=\"lastStep()\" style=\"margin-right: 2px;\">Назад</button>\n    <button class=\"btn btn_enabled\" (click)=\"saveImage()\">Сохранить</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-reg-page',\n  templateUrl: './reg-page.component.html',\n  styleUrls: ['./reg-page.component.css']\n})\nexport class RegPageComponent implements OnInit {\n  \n  form: FormGroup\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      login: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  reg() {\n    this.auth.reg(this.form.value)\n      .subscribe(n => {\n        console.log(n)\n        this.router.navigate(['login'])\n      })\n  }\n\n}\n","<div class=\"content\">\n    <div class=\"log-form\">\n        <div class=\"log-form__form\">\n            <form (submit)=\"reg()\" [formGroup]=\"form\">\n                <span>Регистрация</span><span> | </span><span [routerLink]=\"'/login'\" class=\"secondary-text\">Вход</span>\n                <input type=\"text\" placeholder=\"Логин\" formControlName=\"login\">\n                <input type=\"password\" placeholder=\"Пароль\" formControlName=\"password\" autocomplete=\"off\">\n                <button type=\"submit\" class=\"btn\" [ngClass]=\"form.valid ? 'btn_enabled' : 'btn_disabled'\">Зарегистрироваться</button>\n            </form>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  checkImg(img, size) {\n    let fd = new FormData()\n    fd.append('image', img, img.name)\n    fd.append('size', size)\n    return this.http.post('/api/check', fd)\n  }\n\n  addToDb(type, img, size) {\n    let fd = new FormData()\n    fd.append('image', img, img.name)\n    fd.append('size', size)\n    fd.append('type', type)\n    return this.http.post('/api/methods/' + type, fd)\n  }\n\n  getHistory() {\n    return this.http.get('/api/history')\n  }\n\n  m5updateEdges(blurRadius, trasholdL, trasholdU) {\n    return this.http.post('/api/methods/5', {blurRadius, trasholdL, trasholdU})\n  }\n\n dataURItoBlob(dataURI) {\n    var byteString;\n    if (dataURI.split(',')[0].indexOf('base64') >= 0)\n        byteString = atob(dataURI.split(',')[1]);\n    else\n        byteString = unescape(dataURI.split(',')[1]);\n    var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n    var ia = new Uint8Array(byteString.length);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([ia], {type:mimeString});\n}\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Authguard implements CanActivate {\r\n    \r\n    constructor(private auth: AuthService, private router: Router) {}\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n        if (this.auth.isAuth()) {\r\n            return of(true)\r\n        } \r\n        else {\r\n            this.router.navigate(['/'])\r\n            return of(false)\r\n        }\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private token = null\n\n  constructor(private http: HttpClient) { }\n\n  login(user) {\n    return this.http.post<{token}>('/api/auth/login', user)\n      .pipe(\n        tap(({token}) => {\n          localStorage.setItem('auth-token', token)\n          this.setToken(token)\n        })\n      )\n  }\n\n  setToken(token) {\n    this.token = token\n  }\n\n  getToken() {\n    return this.token\n  }\n\n  isAuth() {\n    return !!this.token\n  }\n\n  logout() {\n    this.setToken(null)\n    localStorage.clear()\n  }\n\n  reg(user) {\n    return this.http.post('/api/auth/reg', user)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MethOneDataService } from './meth-one-data.service';\nimport { MethTwoDataService } from './meth-two-data.service';\nimport { MethFourDataService } from './meth-four-data.service';\nimport { RgbCmykService } from './rgb-smyk.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartsService {\n\n  constructor(\n    private rgbCmykService: RgbCmykService,\n    private oneData: MethOneDataService,\n    private twoData: MethTwoDataService,\n    private fourData: MethFourDataService\n  ) { }\n\n  renderChartsRGB(meth, pData) {\n    let method\n    switch(meth) {\n      case 1: \n        method = this.oneData\n      break\n      case 2: \n        method = this.twoData\n      break\n    }\n    method.amountChannelR = []\n    method.amountChannelG = []\n    method.amountChannelB = []\n    for (var i = 0; i < pData.length; i += 4) {\n      method.arrChannelR.push(pData[i + 0])\n      method.arrChannelG.push(pData[i + 1])\n      method.arrChannelB.push(pData[i + 2])\n      method.arrChannelA.push(pData[i + 3])\n    }\n    for (let i = 0; i <= 255; i++) {\n      if (method.arrChannelR.includes(i)) {\n        method.arrChannelR.forEach(n => {\n          if (n == i) {\n            method.amountChannelR[i] = (method.amountChannelR[i] || 0) + 1;\n          }\n        })\n      }\n      else {\n        method.amountChannelR[i] = 0;\n      }\n\n      if (method.arrChannelG.includes(i)) {\n        method.arrChannelG.forEach(n => {\n          if (n == i) {\n            method.amountChannelG[i] = (method.amountChannelG[i] || 0) + 1;\n          }\n        })\n      }\n      else {\n        method.amountChannelG[i] = 0;\n      }\n\n      if (method.arrChannelB.includes(i)) {\n        method.arrChannelB.forEach(n => {\n          if (n == i) {\n            method.amountChannelB[i] = (method.amountChannelB[i] || 0) + 1;\n          }\n        })\n      }\n      else {\n        method.amountChannelB[i] = 0;\n      }\n    }\n  }\n\n  renderChartsCMYK(meth, pData) {\n    let method\n    switch(meth) {\n      case 4: \n        method = this.fourData\n      break\n    }\n    method.amountChannelC = []\n    method.amountChannelM = []\n    method.amountChannelY = []\n    method.amountChannelK = []\n    for (var i = 0; i < pData.length; i += 4) {\n      let new_cmyk = this.rgbCmykService.rgb2cmyk(pData[i], pData[i + 1], pData[i + 2])\n      method.arrChannelC.push(Math.floor(new_cmyk.c))\n      method.arrChannelM.push(Math.floor(new_cmyk.m))\n      method.arrChannelY.push(Math.floor(new_cmyk.y))\n      method.arrChannelK.push(Math.floor(new_cmyk.k))\n    }\n    for (let i = 0; i <= 100; i++) {\n      if (method.arrChannelC.includes(i)) {\n        method.arrChannelC.forEach(n => {\n          if (n == i) {\n            method.amountChannelC[i] = (method.amountChannelC[i] || 0) + 1;\n          }\n        })\n      }\n      else {\n        method.amountChannelC[i] = 0;\n      }\n\n      if (method.arrChannelM.includes(i)) {\n        method.arrChannelM.forEach(n => {\n          if (n == i) {\n            method.amountChannelM[i] = (method.amountChannelM[i] || 0) + 1;\n          }\n        })\n      }\n      else {\n        method.amountChannelM[i] = 0;\n      }\n\n      if (method.arrChannelY.includes(i)) {\n        method.arrChannelY.forEach(n => {\n          if (n == i) {\n            method.amountChannelY[i] = (method.amountChannelY[i] || 0) + 1;\n          }\n        })\n      }\n      else {\n        method.amountChannelY[i] = 0;\n      }\n\n      if (method.arrChannelK.includes(i)) {\n        method.arrChannelK.forEach(n => {\n          if (n == i) {\n            method.amountChannelK[i] = (method.amountChannelK[i] || 0) + 1;\n          }\n        })\n      }\n      else {\n        method.amountChannelK[i] = 0;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { RgbCmykService } from './rgb-smyk.service';\n\ninterface Max {\n  elm: number,\n  index: number,\n  gradient: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MethFiveDataService {\n  picParams\n\n  arrChannelC = []\n  arrChannelM = []\n  arrChannelY = []\n  arrChannelK = []\n\n  newArrChannelY = []\n\n  grandientAngles = []\n  newImageArray = []\n\n  expsArr = []\n\n  blurChannelArr = []\n  gradientsChannelArr = []\n  nonmaxChannelArr = []\n  trasholdsChannelArr = []\n\n  newFLUchannel = []\n\n  constructor(private rgbCmykService: RgbCmykService, private api: ApiService) { }\n\n  fullZeroing() {\n    this.picParams\n\n    this.arrChannelC = []\n    this.arrChannelM = []\n    this.arrChannelY = []\n    this.arrChannelK = []\n\n    this.newImageArray = []\n  }\n\n  findEdgesXX(blurRadius, trasholdL, trasholdU) {\n    this.api.m5updateEdges(blurRadius, trasholdL, trasholdU)\n      .subscribe(res => {\n        console.log(res)\n      })\n  }\n  findEdges(blurRadius, trasholdL, trasholdU) {\n    this.imageBlur(blurRadius)\n    this.findGradients()\n    this.nonmaximumRemove()\n    this.trasholds(trasholdL, trasholdU)\n    this.removeExp()\n  }\n\n  findPixel(oY, oX) {\n    const c = this.arrChannelC[this.picParams.width * oY + oX]\n    const m = this.arrChannelM[this.picParams.width * oY + oX]\n    const y = this.arrChannelY[this.picParams.width * oY + oX]\n    const k = this.arrChannelK[this.picParams.width * oY + oX]\n    return {c, m, y, k}\n  }\n\n  findSquare(pixelIndedex, radius) {\n    const rawY = Math.floor(pixelIndedex / this.picParams.width)\n    const rawX = pixelIndedex % this.picParams.width\n    let startX = rawX - radius\n    let endX = rawX + radius\n    let startY = rawY - radius\n    let endY = rawY +  radius\n    if (startX < 0) {\n      startX = 0\n    }\n    if (endX >= this.picParams.width) {\n      endX = this.picParams.width - 1\n    }\n    if (startY < 0) {\n      startY = 0\n    }\n    if (endY >= this.picParams.height) {\n      endY = this.picParams.height - 1\n    }\n    return {startX, endX, startY, endY}\n  }\n\n  imageBlur(blurRadius) {\n    let newPixelArrY = []\n    this.newImageArray = []\n    this.blurChannelArr = []\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      let square = this.findSquare(i, blurRadius)\n      let pixelCount = 0 \n      newPixelArrY = []\n      for (let y = square.startY; y <= square.endY; y++) {\n        for (let p = (this.picParams.width * y + square.startX); p <= (this.picParams.width * y + square.endX); p++) {\n          newPixelArrY.push(this.arrChannelY[p])\n          pixelCount++\n        }\n      }\n      this.blurChannelArr[i] = Math.floor(newPixelArrY.reduce((sum, element) => sum + element, 0) / pixelCount)\n    }\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      let newPixel = this.rgbCmykService.cmyk2rgb(0, 0, 0, this.blurChannelArr[i])\n      this.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n  }\n\n  findGradients() {\n    let newPixelArrY = []\n    let gradientArrX = []\n    let gradientArrY = []\n    let matrixX = [-1, 0, 1, -2, 0, 2, -1, 0, 1]\n    let matrixY = [-1, -2, -1, 0, 0, 0, 1, 2, 1]\n    this.newImageArray = []\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      let square = this.findSquare(i, 1)\n      let pixelCount = 0 \n      newPixelArrY = []\n      for (let y = square.startY; y <= square.endY; y++) {\n        for (let p = (this.picParams.width * y + square.startX); p <= (this.picParams.width * y + square.endX); p++) {\n          newPixelArrY.push(this.blurChannelArr[p])\n          pixelCount++\n        }\n      }\n      if (newPixelArrY.length < 9) {\n        this.gradientsChannelArr[i] = 1\n        this.grandientAngles[i] = 404\n      }\n      else {\n        let sumX = 0\n        let sumY = 0\n        newPixelArrY.forEach((pix, index) => {\n          sumX += pix * matrixX[index]\n          sumY += pix * matrixY[index]\n        })\n        gradientArrX[i] = Math.floor(sumX)\n        gradientArrY[i] = Math.floor(sumY)\n        this.gradientsChannelArr[i] = Math.floor(Math.sqrt(Math.pow(gradientArrX[i], 2) + Math.pow(gradientArrY[i], 2)))\n        this.grandientAngles[i] = (Math.atan2(Math.floor(sumY), Math.floor(sumX)) * 180) / Math.PI\n      }\n      if (this.gradientsChannelArr[i] == 0) {\n        this.grandientAngles[i] = 404\n      }\n    }\n    // console.log(this.gradientsChannelArr, 'XXXX', this.grandientAngles)\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      let newPixel = this.rgbCmykService.cmyk2rgb(0, 0, 0, this.gradientsChannelArr[i])\n      this.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n  }\n\n\n\n  nonmaximumRemove() {\n    // let cyanHUI = []\n    // let magHUI = []\n    // let yellowHUI = []\n    // let bHUI = []\n\n    let max = {elm: 0, index: 0, gradient: -1}\n    let newPixelArrY = []\n    // let newOfAngelArr = []\n    this.nonmaxChannelArr = []\n    this.newImageArray = []\n    this.arrChannelY.forEach((n, i) => this.nonmaxChannelArr[i] = 0)\n    // let forgottenArr = []\n\n    // this.arrChannelY.forEach((n, i) => {\n    //   cyanHUI[i] = 0\n    //   magHUI[i] = 0\n    //   yellowHUI[i] = 0\n    //   bHUI[i] = 0\n    // })\n\n    this.grandientAngles = this.grandientAngles.map((p, s) => {\n      if (p > -23 && p <= 22 || (p > 159 && p <= 180) || p < -159) {\n        // cyanHUI[s] = 255\n        return 0\n      }\n      else if ((p > 23 && p <= 69) || (p <= -114 && p > -159)) {\n        // magHUI[s] = 255\n        return 135\n      }\n      else if ((p > 69 && p <= 114) || (p <= -69 && p > -114)) {\n        // yellowHUI[s] = 255\n        return 90\n      }\n      else if (p > 114 && p <= 159 || p <= -23 && p > -69) {\n        // bHUI[s] = 255\n        return 45\n      }\n      else {\n        return 404\n      }\n    })\n\n    // console.log(this.grandientAngles)\n    // for (let i = 0; i < this.arrChannelY.length; i++) {\n    //   this.newImageArray.push(cyanHUI[i], magHUI[i], yellowHUI[i], 255)\n    // }\n\n\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n\n    \n\n      // if (!forgottenArr.includes(i)) {\n      if (this.grandientAngles[i] != 404) {\n        // console.log('fhfgj')\n        newPixelArrY = []\n        let lineNewPixAngleIndex = i\n        let lineNewPixAngle = this.grandientAngles[i]\n        const qGrandientAngle = this.grandientAngles[i]\n        while (lineNewPixAngle == qGrandientAngle) {\n          let rawY = Math.floor(lineNewPixAngleIndex / this.picParams.width)\n          let rawX = lineNewPixAngleIndex % this.picParams.width\n          // console.log('XYYYYYIXWAW', rawX, rawY, lineNewPixAngle)\n          newPixelArrY.push({elm: this.gradientsChannelArr[lineNewPixAngleIndex], index: lineNewPixAngleIndex, gradient: lineNewPixAngle})\n          \n          // forgottenArr.push(lineNewPixAngleIndex)\n\n          let newY\n          let newX\n          switch(this.grandientAngles[lineNewPixAngleIndex]) {\n            case 0: \n              newY = rawY\n              newX = rawX + 1\n              break\n            case 45: \n              newY = rawY + 1\n              newX = rawX - 1\n              break\n            case 90:\n              newY = rawY + 1\n              newX = rawX\n              break\n            case 135:\n              newY = rawY + 1\n              newX = rawX + 1\n              break \n          }\n          this.grandientAngles[lineNewPixAngleIndex] = 404\n          // if ((newX <= 0) || (newX >= (this.picParams.width - 1)) || (newY <= 0) || (newY >= (this.picParams.height - 1))) {\n          //   break\n          // }\n          lineNewPixAngle = this.grandientAngles[this.picParams.width * newY + newX]\n          // console.log('HUI', lineNewPixAngleIndex, newX, newY)\n          lineNewPixAngleIndex = this.picParams.width * newY + newX\n          // console.log('XXX', qGrandientAngle, lineNewPixAngle, lineNewPixAngleIndex)\n        }\n        max = newPixelArrY[0];\n        for (let i = 0; i < newPixelArrY.length; i++) {\n          if (newPixelArrY[i].elm > max.elm) {\n            max = newPixelArrY[i]\n          }\n        }\n        \n        // newPixelArrY.forEach(n => {\n        //   if (newPixelArrY[n.index] < max.elm) {\n        //     this.nonmaxChannelArr[n.index] = 0\n        //   }\n        // })\n        this.nonmaxChannelArr[max.index] = max.elm\n      }\n    }\n    // console.log(this.nonmaxChannelArr)\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      let newPixel = this.rgbCmykService.cmyk2rgb(0, 0, 0, this.nonmaxChannelArr[i])\n      this.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n\n\n\n\n\n    //     // console.log(newPixelArrY)\n    //     max = newPixelArrY[0];\n    //     for (let i = 0; i < newPixelArrY.length; i++) {\n    //       if (newPixelArrY[i].elm > max.elm) {\n    //         max = newPixelArrY[i]\n    //       }\n    //     }\n    //     newPixelArrY.forEach(n => {\n    //       if (newPixelArrY[n.index] <= max.elm) {\n    //         this.nonmaxChannelArr[n.index] = 0\n    //       }\n    //     })\n    //     this.nonmaxChannelArr[max.index] = max.elm\n    //   }\n    // }\n    // for (let i = 0; i < this.arrChannelY.length; i++) {\n    //   let newPixel = this.rgbCmykService.cmyk2rgb(0, 0, 0, this.nonmaxChannelArr[i])\n    //   this.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    // }\n\n    // this.nonmaxChannelArr = this.gradientsChannelArr\n\n      // let square = this.findSquare(i, 1)\n      // newPixelArrY = []\n      // for (let y = square.startY; y <= square.endY; y++) {\n      //   for (let p = (this.picParams.width * y + square.startX); p <= (this.picParams.width * y + square.endX); p++) {\n      //     newPixelArrY.push({elm: this.gradientsChannelArr[p], index: p, gradient: this.grandientAngles[p]})\n      //   }\n      // }\n      // if (newPixelArrY.length < 9) {\n      //   newPixelArrY = []\n      //   for (let i = 0; i < 9; i++) {\n      //     newPixelArrY.push({elm: 1, index: i, gradient: -1})\n      //   }\n      // }\n      // switch(this.grandientAngles[i]) {\n      //   case 0: \n      //     newOfAngelArr = [newPixelArrY[3], newPixelArrY[4], newPixelArrY[5]]\n      //     newOfAngelArr = newOfAngelArr.filter(n => n.gradient == 0)\n      //     if (newOfAngelArr.length == 0) {\n      //       newOfAngelArr = [{elm: 0, index: i, gradient: -1}]\n      //     }\n      //     break\n      //   case 45: \n      //     newOfAngelArr = [newPixelArrY[2], newPixelArrY[4], newPixelArrY[6]]\n      //     newOfAngelArr = newOfAngelArr.filter(n => n.gradient == 45)\n      //     break\n      //   case 90: \n      //     newOfAngelArr = [newPixelArrY[1], newPixelArrY[4], newPixelArrY[7]]\n      //     newOfAngelArr = newOfAngelArr.filter(n => n.gradient == 90)\n      //     break\n      //   case 135: \n      //     newOfAngelArr = [newPixelArrY[0], newPixelArrY[4], newPixelArrY[8]]\n      //     newOfAngelArr = newOfAngelArr.filter(n => n.gradient == 135)\n      //     break\n      //   default: \n      //     newOfAngelArr = [{elm: 0, index: i, gradient: -1}]\n      // }\n      // max = newOfAngelArr[0];\n  }\n\n  trasholds(lowLimit, upLimit) {\n    this.trasholdsChannelArr = []\n    this.newImageArray = []\n    this.expsArr = []\n    this.nonmaxChannelArr.forEach((v, i) => {\n      if (v > upLimit) {\n        this.trasholdsChannelArr[i] = 100\n      }\n      if (v < lowLimit) {\n        this.trasholdsChannelArr[i] = 0\n      }\n      if (v > lowLimit && v < upLimit) {\n        this.trasholdsChannelArr[i] = 50\n        this.expsArr.push(i)\n      }\n    })\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      let newPixel = this.rgbCmykService.cmyk2rgb(0, 0, 0, this.trasholdsChannelArr[i])\n      this.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n  }\n\n  removeExp() {\n    let newPixelYSum \n    this.expsArr.forEach(i => {\n      let square = this.findSquare(i, 1)\n      newPixelYSum = 0\n      for (let y = square.startY; y <= square.endY; y++) {\n        for (let p = (this.picParams.width * y + square.startX); p <= (this.picParams.width * y + square.endX); p++) {\n          newPixelYSum += this.trasholdsChannelArr[p]\n        }\n      }\n      if (this.trasholdsChannelArr[i] == newPixelYSum) {\n        this.trasholdsChannelArr[i] = 0\n      }\n      else {\n        this.trasholdsChannelArr[i] = 100\n      }\n    })\n    this.newFLUchannel = this.trasholdsChannelArr\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      let newPixel = this.rgbCmykService.cmyk2rgb(0, 0, 0, this.trasholdsChannelArr[i])\n      this.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n  }\n\n  generateFLUImage() {\n    let currentPixC\n    this.newImageArray = []\n    for (let i = 0; i < this.arrChannelY.length; i++) {\n      if (this.newFLUchannel[i] == 0) {\n        currentPixC = this.arrChannelY[i]\n      }\n      else {\n        currentPixC = this.newFLUchannel[i]\n      }\n      let newPixel = this.rgbCmykService.cmyk2rgb(this.arrChannelC[i], this.arrChannelM[i], currentPixC, this.arrChannelK[i])\n      this.newImageArray.push(newPixel.r, newPixel.g, newPixel.b, 255)\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MethFourDataService {\n  picParams\n\n  choosenChannel: string\n  arrChannelC = []\n  arrChannelM = []\n  arrChannelY = []\n  arrChannelK = []\n\n  amountChannelC = []\n  amountChannelM = []\n  amountChannelY = []\n  amountChannelK = []\n  newChoosenChannel = []\n  newImageArray = []\n\n  constructor() { }\n\n  fullZeroing() {\n    this.picParams\n\n    this.choosenChannel\n    this.arrChannelC = []\n    this.arrChannelM = []\n    this.arrChannelY = []\n    this.arrChannelK = []\n\n    this.amountChannelC = []\n    this.amountChannelM = []\n    this.amountChannelY = []\n    this.amountChannelK = []\n    this.newChoosenChannel = []\n    this.newImageArray = []\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface PicParams {\n  width: number,\n  height: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MethOneDataService {\n\n  picParams: PicParams\n\n  choosenChannel: string\n  arrChannelR = []\n  arrChannelG = []\n  arrChannelB = []\n  arrChannelA = []\n\n  amountChannelR = []\n  amountChannelG = []\n  amountChannelB = []\n  amountChannelA = []\n\n  newChoosenChannel = []\n  newImageArray = []\n\n  constructor() { }\n\n  fullZeroing() {\n    this.picParams\n\n    this.choosenChannel\n    this.arrChannelR = []\n    this.arrChannelG = []\n    this.arrChannelB = []\n    this.arrChannelA = []\n\n    this.amountChannelR = []\n    this.amountChannelG = []\n    this.amountChannelB = []\n    this.amountChannelA = []\n    \n    this.newChoosenChannel = []\n    this.newImageArray = []\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\nexport interface PicParams {\n  width: number,\n  height: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MethThreeDataService {\n  picParams: PicParams\n  codeParams: PicParams\n  \n  codeData\n\n  choosenChannel: string\n  arrChannelR = []\n  arrChannelG = []\n  arrChannelB = []\n  arrChannelA = []\n\n  channelPixArrR = []\n  channelPixArrG = []\n  channelPixArrB = []\n  channelPixArrA = []\n\n  channelDataR = []\n  channelDataG = []\n  channelDataB = []\n  channelDataA = []\n\n  newChoosenChannel = []\n  newImageArray = []\n\n  constructor() { }\n\n  fullZeroing() {\n    this.picParams\n\n    this.choosenChannel\n    this.arrChannelR = []\n    this.arrChannelG = []\n    this.arrChannelB = []\n    this.arrChannelA = []\n\n    this.channelPixArrR = []\n    this.channelPixArrG = []\n    this.channelPixArrB = []\n    this.channelPixArrA = []\n\n    this.channelDataR = []\n    this.channelDataG = []\n    this.channelDataB = []\n    this.channelDataA= []\n\n    this.newChoosenChannel = []\n    this.newImageArray = []\n  }\n\n  codeZeroing() {\n    this.codeParams\n    this.codeData = ''\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface PicParams {\n  width: number,\n  height: number\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MethTwoDataService {\n\n  picParams: PicParams\n\n  choosenChannel: string\n  arrChannelR = []\n  arrChannelG = []\n  arrChannelB = []\n  arrChannelA = []\n\n  amountChannelR = []\n  amountChannelG = []\n  amountChannelB = []\n  newChoosenChannel = []\n  newImageArray = []\n\n  constructor() { }\n\n  fullZeroing() {\n    this.picParams\n\n    this.choosenChannel\n    this.arrChannelR = []\n    this.arrChannelG = []\n    this.arrChannelB = []\n    this.arrChannelA = []\n\n    this.amountChannelR = []\n    this.amountChannelG = []\n    this.amountChannelB = []\n    this.newChoosenChannel = []\n    this.newImageArray = []\n  }\n}\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RgbCmykService {\n\n  constructor() { }\n\n  rgb2cmyk(r, g, b, normalized?) {\n    var c = 1 - (r / 255);\n    var m = 1 - (g / 255);\n    var y = 1 - (b / 255);\n    var k = Math.min(c, Math.min(m, y));\n\n    c = (c - k) / (1 - k);\n    m = (m - k) / (1 - k);\n    y = (y - k) / (1 - k);\n\n    if(!normalized){\n        c = Math.round(c * 10000) / 100;\n        m = Math.round(m * 10000) / 100;\n        y = Math.round(y * 10000) / 100;\n        k = Math.round(k * 10000) / 100;\n    }\n    \n    c = isNaN(c) ? 0 : c;\n    m = isNaN(m) ? 0 : m;\n    y = isNaN(y) ? 0 : y;\n    k = isNaN(k) ? 0 : k;\n    \n    return {\n      c: c,\n      m: m,\n      y: y,\n      k: k\n    }\n}\n\ncmyk2rgb(c, m, y, k, normalized?){\n  c = (c / 100);\n  m = (m / 100);\n  y = (y / 100);\n  k = (k / 100);\n    \n  c = c * (1 - k) + k;\n  m = m * (1 - k) + k;\n  y = y * (1 - k) + k;\n    \n  var r = 1 - c;\n  var g = 1 - m;\n  var b = 1 - y;\n    \n  if(!normalized){\n    r = Math.round(255 * r);\n    g = Math.round(255 * g);\n    b = Math.round(255 * b);\n  }\n    \n  return {\n    r: r,\n    g: g,\n    b: b\n    }\n  }\n}\n","import { HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private auth: AuthService) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (this.auth.isAuth()) {\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    Authorization: this.auth.getToken()\r\n                }\r\n            })\r\n        }\r\n        return next.handle(req)\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"sourceRoot":"webpack:///"}